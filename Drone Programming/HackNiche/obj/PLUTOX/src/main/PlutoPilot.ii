# 1 "src/main/PlutoPilot.cpp"
# 1 "D:\\Mihir\\Hackathons\\HackNiche_Kratos\\Drone Programming\\HackNiche//"
# 1 "<built-in>"
#define __STDC__ 1
#define __cplusplus 199711L
#define __STDC_HOSTED__ 1
#define __GNUC__ 6
#define __GNUC_MINOR__ 3
#define __GNUC_PATCHLEVEL__ 1
#define __VERSION__ "6.3.1 20170620 (release) [ARM/embedded-6-branch revision 249437]"
#define __ATOMIC_RELAXED 0
#define __ATOMIC_SEQ_CST 5
#define __ATOMIC_ACQUIRE 2
#define __ATOMIC_RELEASE 3
#define __ATOMIC_ACQ_REL 4
#define __ATOMIC_CONSUME 1
#define __OPTIMIZE_SIZE__ 1
#define __OPTIMIZE__ 1
#define __FINITE_MATH_ONLY__ 0
#define __SIZEOF_INT__ 4
#define __SIZEOF_LONG__ 4
#define __SIZEOF_LONG_LONG__ 8
#define __SIZEOF_SHORT__ 2
#define __SIZEOF_FLOAT__ 4
#define __SIZEOF_DOUBLE__ 8
#define __SIZEOF_LONG_DOUBLE__ 8
#define __SIZEOF_SIZE_T__ 4
#define __CHAR_BIT__ 8
#define __BIGGEST_ALIGNMENT__ 8
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __ORDER_BIG_ENDIAN__ 4321
#define __ORDER_PDP_ENDIAN__ 3412
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __SIZEOF_POINTER__ 4
#define __GNUG__ 6
#define __SIZE_TYPE__ unsigned int
#define __PTRDIFF_TYPE__ int
#define __WCHAR_TYPE__ unsigned int
#define __WINT_TYPE__ unsigned int
#define __INTMAX_TYPE__ long long int
#define __UINTMAX_TYPE__ long long unsigned int
#define __CHAR16_TYPE__ short unsigned int
#define __CHAR32_TYPE__ long unsigned int
#define __SIG_ATOMIC_TYPE__ int
#define __INT8_TYPE__ signed char
#define __INT16_TYPE__ short int
#define __INT32_TYPE__ long int
#define __INT64_TYPE__ long long int
#define __UINT8_TYPE__ unsigned char
#define __UINT16_TYPE__ short unsigned int
#define __UINT32_TYPE__ long unsigned int
#define __UINT64_TYPE__ long long unsigned int
#define __INT_LEAST8_TYPE__ signed char
#define __INT_LEAST16_TYPE__ short int
#define __INT_LEAST32_TYPE__ long int
#define __INT_LEAST64_TYPE__ long long int
#define __UINT_LEAST8_TYPE__ unsigned char
#define __UINT_LEAST16_TYPE__ short unsigned int
#define __UINT_LEAST32_TYPE__ long unsigned int
#define __UINT_LEAST64_TYPE__ long long unsigned int
#define __INT_FAST8_TYPE__ int
#define __INT_FAST16_TYPE__ int
#define __INT_FAST32_TYPE__ int
#define __INT_FAST64_TYPE__ long long int
#define __UINT_FAST8_TYPE__ unsigned int
#define __UINT_FAST16_TYPE__ unsigned int
#define __UINT_FAST32_TYPE__ unsigned int
#define __UINT_FAST64_TYPE__ long long unsigned int
#define __INTPTR_TYPE__ int
#define __UINTPTR_TYPE__ unsigned int
#define __has_include(STR) __has_include__(STR)
#define __has_include_next(STR) __has_include_next__(STR)
#define __GXX_WEAK__ 1
#define __DEPRECATED 1
#define __GXX_RTTI 1
#define __cpp_rtti 199711
#define __cpp_binary_literals 201304
#define __cpp_hex_float 201603
#define __cpp_runtime_arrays 198712
#define __EXCEPTIONS 1
#define __cpp_exceptions 199711
#define __GXX_ABI_VERSION 1010
#define __SCHAR_MAX__ 0x7f
#define __SHRT_MAX__ 0x7fff
#define __INT_MAX__ 0x7fffffff
#define __LONG_MAX__ 0x7fffffffL
#define __LONG_LONG_MAX__ 0x7fffffffffffffffLL
#define __WCHAR_MAX__ 0xffffffffU
#define __WCHAR_MIN__ 0U
#define __WINT_MAX__ 0xffffffffU
#define __WINT_MIN__ 0U
#define __PTRDIFF_MAX__ 0x7fffffff
#define __SIZE_MAX__ 0xffffffffU
#define __INTMAX_MAX__ 0x7fffffffffffffffLL
#define __INTMAX_C(c) c ## LL
#define __UINTMAX_MAX__ 0xffffffffffffffffULL
#define __UINTMAX_C(c) c ## ULL
#define __SIG_ATOMIC_MAX__ 0x7fffffff
#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
#define __INT8_MAX__ 0x7f
#define __INT16_MAX__ 0x7fff
#define __INT32_MAX__ 0x7fffffffL
#define __INT64_MAX__ 0x7fffffffffffffffLL
#define __UINT8_MAX__ 0xff
#define __UINT16_MAX__ 0xffff
#define __UINT32_MAX__ 0xffffffffUL
#define __UINT64_MAX__ 0xffffffffffffffffULL
#define __INT_LEAST8_MAX__ 0x7f
#define __INT8_C(c) c
#define __INT_LEAST16_MAX__ 0x7fff
#define __INT16_C(c) c
#define __INT_LEAST32_MAX__ 0x7fffffffL
#define __INT32_C(c) c ## L
#define __INT_LEAST64_MAX__ 0x7fffffffffffffffLL
#define __INT64_C(c) c ## LL
#define __UINT_LEAST8_MAX__ 0xff
#define __UINT8_C(c) c
#define __UINT_LEAST16_MAX__ 0xffff
#define __UINT16_C(c) c
#define __UINT_LEAST32_MAX__ 0xffffffffUL
#define __UINT32_C(c) c ## UL
#define __UINT_LEAST64_MAX__ 0xffffffffffffffffULL
#define __UINT64_C(c) c ## ULL
#define __INT_FAST8_MAX__ 0x7fffffff
#define __INT_FAST16_MAX__ 0x7fffffff
#define __INT_FAST32_MAX__ 0x7fffffff
#define __INT_FAST64_MAX__ 0x7fffffffffffffffLL
#define __UINT_FAST8_MAX__ 0xffffffffU
#define __UINT_FAST16_MAX__ 0xffffffffU
#define __UINT_FAST32_MAX__ 0xffffffffU
#define __UINT_FAST64_MAX__ 0xffffffffffffffffULL
#define __INTPTR_MAX__ 0x7fffffff
#define __UINTPTR_MAX__ 0xffffffffU
#define __GCC_IEC_559 0
#define __GCC_IEC_559_COMPLEX 0
#define __FLT_EVAL_METHOD__ 0
#define __DEC_EVAL_METHOD__ 2
#define __FLT_RADIX__ 2
#define __FLT_MANT_DIG__ 24
#define __FLT_DIG__ 6
#define __FLT_MIN_EXP__ (-125)
#define __FLT_MIN_10_EXP__ (-37)
#define __FLT_MAX_EXP__ 128
#define __FLT_MAX_10_EXP__ 38
#define __FLT_DECIMAL_DIG__ 9
#define __FLT_MAX__ 3.4028234663852886e+38F
#define __FLT_MIN__ 1.1754943508222875e-38F
#define __FLT_EPSILON__ 1.1920928955078125e-7F
#define __FLT_DENORM_MIN__ 1.4012984643248171e-45F
#define __FLT_HAS_DENORM__ 1
#define __FLT_HAS_INFINITY__ 1
#define __FLT_HAS_QUIET_NAN__ 1
#define __FP_FAST_FMAF 1
#define __DBL_MANT_DIG__ 53
#define __DBL_DIG__ 15
#define __DBL_MIN_EXP__ (-1021)
#define __DBL_MIN_10_EXP__ (-307)
#define __DBL_MAX_EXP__ 1024
#define __DBL_MAX_10_EXP__ 308
#define __DBL_DECIMAL_DIG__ 17
#define __DBL_MAX__ double(1.7976931348623157e+308L)
#define __DBL_MIN__ double(2.2250738585072014e-308L)
#define __DBL_EPSILON__ double(2.2204460492503131e-16L)
#define __DBL_DENORM_MIN__ double(4.9406564584124654e-324L)
#define __DBL_HAS_DENORM__ 1
#define __DBL_HAS_INFINITY__ 1
#define __DBL_HAS_QUIET_NAN__ 1
#define __LDBL_MANT_DIG__ 53
#define __LDBL_DIG__ 15
#define __LDBL_MIN_EXP__ (-1021)
#define __LDBL_MIN_10_EXP__ (-307)
#define __LDBL_MAX_EXP__ 1024
#define __LDBL_MAX_10_EXP__ 308
#define __DECIMAL_DIG__ 17
#define __LDBL_MAX__ 1.7976931348623157e+308L
#define __LDBL_MIN__ 2.2250738585072014e-308L
#define __LDBL_EPSILON__ 2.2204460492503131e-16L
#define __LDBL_DENORM_MIN__ 4.9406564584124654e-324L
#define __LDBL_HAS_DENORM__ 1
#define __LDBL_HAS_INFINITY__ 1
#define __LDBL_HAS_QUIET_NAN__ 1
#define __DEC32_MANT_DIG__ 7
#define __DEC32_MIN_EXP__ (-94)
#define __DEC32_MAX_EXP__ 97
#define __DEC32_MIN__ 1E-95DF
#define __DEC32_MAX__ 9.999999E96DF
#define __DEC32_EPSILON__ 1E-6DF
#define __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
#define __DEC64_MANT_DIG__ 16
#define __DEC64_MIN_EXP__ (-382)
#define __DEC64_MAX_EXP__ 385
#define __DEC64_MIN__ 1E-383DD
#define __DEC64_MAX__ 9.999999999999999E384DD
#define __DEC64_EPSILON__ 1E-15DD
#define __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
#define __DEC128_MANT_DIG__ 34
#define __DEC128_MIN_EXP__ (-6142)
#define __DEC128_MAX_EXP__ 6145
#define __DEC128_MIN__ 1E-6143DL
#define __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
#define __DEC128_EPSILON__ 1E-33DL
#define __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
#define __SFRACT_FBIT__ 7
#define __SFRACT_IBIT__ 0
#define __SFRACT_MIN__ (-0.5HR-0.5HR)
#define __SFRACT_MAX__ 0X7FP-7HR
#define __SFRACT_EPSILON__ 0x1P-7HR
#define __USFRACT_FBIT__ 8
#define __USFRACT_IBIT__ 0
#define __USFRACT_MIN__ 0.0UHR
#define __USFRACT_MAX__ 0XFFP-8UHR
#define __USFRACT_EPSILON__ 0x1P-8UHR
#define __FRACT_FBIT__ 15
#define __FRACT_IBIT__ 0
#define __FRACT_MIN__ (-0.5R-0.5R)
#define __FRACT_MAX__ 0X7FFFP-15R
#define __FRACT_EPSILON__ 0x1P-15R
#define __UFRACT_FBIT__ 16
#define __UFRACT_IBIT__ 0
#define __UFRACT_MIN__ 0.0UR
#define __UFRACT_MAX__ 0XFFFFP-16UR
#define __UFRACT_EPSILON__ 0x1P-16UR
#define __LFRACT_FBIT__ 31
#define __LFRACT_IBIT__ 0
#define __LFRACT_MIN__ (-0.5LR-0.5LR)
#define __LFRACT_MAX__ 0X7FFFFFFFP-31LR
#define __LFRACT_EPSILON__ 0x1P-31LR
#define __ULFRACT_FBIT__ 32
#define __ULFRACT_IBIT__ 0
#define __ULFRACT_MIN__ 0.0ULR
#define __ULFRACT_MAX__ 0XFFFFFFFFP-32ULR
#define __ULFRACT_EPSILON__ 0x1P-32ULR
#define __LLFRACT_FBIT__ 63
#define __LLFRACT_IBIT__ 0
#define __LLFRACT_MIN__ (-0.5LLR-0.5LLR)
#define __LLFRACT_MAX__ 0X7FFFFFFFFFFFFFFFP-63LLR
#define __LLFRACT_EPSILON__ 0x1P-63LLR
#define __ULLFRACT_FBIT__ 64
#define __ULLFRACT_IBIT__ 0
#define __ULLFRACT_MIN__ 0.0ULLR
#define __ULLFRACT_MAX__ 0XFFFFFFFFFFFFFFFFP-64ULLR
#define __ULLFRACT_EPSILON__ 0x1P-64ULLR
#define __SACCUM_FBIT__ 7
#define __SACCUM_IBIT__ 8
#define __SACCUM_MIN__ (-0X1P7HK-0X1P7HK)
#define __SACCUM_MAX__ 0X7FFFP-7HK
#define __SACCUM_EPSILON__ 0x1P-7HK
#define __USACCUM_FBIT__ 8
#define __USACCUM_IBIT__ 8
#define __USACCUM_MIN__ 0.0UHK
#define __USACCUM_MAX__ 0XFFFFP-8UHK
#define __USACCUM_EPSILON__ 0x1P-8UHK
#define __ACCUM_FBIT__ 15
#define __ACCUM_IBIT__ 16
#define __ACCUM_MIN__ (-0X1P15K-0X1P15K)
#define __ACCUM_MAX__ 0X7FFFFFFFP-15K
#define __ACCUM_EPSILON__ 0x1P-15K
#define __UACCUM_FBIT__ 16
#define __UACCUM_IBIT__ 16
#define __UACCUM_MIN__ 0.0UK
#define __UACCUM_MAX__ 0XFFFFFFFFP-16UK
#define __UACCUM_EPSILON__ 0x1P-16UK
#define __LACCUM_FBIT__ 31
#define __LACCUM_IBIT__ 32
#define __LACCUM_MIN__ (-0X1P31LK-0X1P31LK)
#define __LACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LK
#define __LACCUM_EPSILON__ 0x1P-31LK
#define __ULACCUM_FBIT__ 32
#define __ULACCUM_IBIT__ 32
#define __ULACCUM_MIN__ 0.0ULK
#define __ULACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULK
#define __ULACCUM_EPSILON__ 0x1P-32ULK
#define __LLACCUM_FBIT__ 31
#define __LLACCUM_IBIT__ 32
#define __LLACCUM_MIN__ (-0X1P31LLK-0X1P31LLK)
#define __LLACCUM_MAX__ 0X7FFFFFFFFFFFFFFFP-31LLK
#define __LLACCUM_EPSILON__ 0x1P-31LLK
#define __ULLACCUM_FBIT__ 32
#define __ULLACCUM_IBIT__ 32
#define __ULLACCUM_MIN__ 0.0ULLK
#define __ULLACCUM_MAX__ 0XFFFFFFFFFFFFFFFFP-32ULLK
#define __ULLACCUM_EPSILON__ 0x1P-32ULLK
#define __QQ_FBIT__ 7
#define __QQ_IBIT__ 0
#define __HQ_FBIT__ 15
#define __HQ_IBIT__ 0
#define __SQ_FBIT__ 31
#define __SQ_IBIT__ 0
#define __DQ_FBIT__ 63
#define __DQ_IBIT__ 0
#define __TQ_FBIT__ 127
#define __TQ_IBIT__ 0
#define __UQQ_FBIT__ 8
#define __UQQ_IBIT__ 0
#define __UHQ_FBIT__ 16
#define __UHQ_IBIT__ 0
#define __USQ_FBIT__ 32
#define __USQ_IBIT__ 0
#define __UDQ_FBIT__ 64
#define __UDQ_IBIT__ 0
#define __UTQ_FBIT__ 128
#define __UTQ_IBIT__ 0
#define __HA_FBIT__ 7
#define __HA_IBIT__ 8
#define __SA_FBIT__ 15
#define __SA_IBIT__ 16
#define __DA_FBIT__ 31
#define __DA_IBIT__ 32
#define __TA_FBIT__ 63
#define __TA_IBIT__ 64
#define __UHA_FBIT__ 8
#define __UHA_IBIT__ 8
#define __USA_FBIT__ 16
#define __USA_IBIT__ 16
#define __UDA_FBIT__ 32
#define __UDA_IBIT__ 32
#define __UTA_FBIT__ 64
#define __UTA_IBIT__ 64
#define __REGISTER_PREFIX__ 
#define __USER_LABEL_PREFIX__ 
#define __GNUC_GNU_INLINE__ 1
#define __CHAR_UNSIGNED__ 1
#define __WCHAR_UNSIGNED__ 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
#define __GCC_ATOMIC_BOOL_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
#define __GCC_ATOMIC_SHORT_LOCK_FREE 2
#define __GCC_ATOMIC_INT_LOCK_FREE 2
#define __GCC_ATOMIC_LONG_LOCK_FREE 2
#define __GCC_ATOMIC_LLONG_LOCK_FREE 1
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define __GCC_ATOMIC_POINTER_LOCK_FREE 2
#define __GCC_HAVE_DWARF2_CFI_ASM 1
#define __PRAGMA_REDEFINE_EXTNAME 1
#define __SIZEOF_WCHAR_T__ 4
#define __SIZEOF_WINT_T__ 4
#define __SIZEOF_PTRDIFF_T__ 4
#define __ARM_FEATURE_DSP 1
#define __ARM_FEATURE_QBIT 1
#define __ARM_FEATURE_SAT 1
#undef __ARM_FEATURE_CRYPTO
# 1 "<built-in>"
#define __ARM_FEATURE_UNALIGNED 1
#undef __ARM_FEATURE_QRDMX
# 1 "<built-in>"
#define __ARM_32BIT_STATE 1
#define __ARM_FEATURE_LDREX 7
#define __ARM_FEATURE_CLZ 1
#define __ARM_FEATURE_SIMD32 1
#define __ARM_SIZEOF_MINIMAL_ENUM 1
#define __ARM_SIZEOF_WCHAR_T 4
#define __ARM_ARCH_PROFILE 77
#define __arm__ 1
#define __ARM_ARCH 7
#define __APCS_32__ 1
#define __thumb__ 1
#define __thumb2__ 1
#define __THUMBEL__ 1
#define __ARM_ARCH_ISA_THUMB 2
#define __ARMEL__ 1
#define __VFP_FP__ 1
#define __ARM_FP 4
#define __ARM_FEATURE_FMA 1
#undef __ARM_NEON__
# 1 "<built-in>"
#undef __ARM_NEON
# 1 "<built-in>"
#undef __ARM_NEON_FP
# 1 "<built-in>"
#define __THUMB_INTERWORK__ 1
#define __ARM_ARCH_7EM__ 1
#define __ARM_PCS_VFP 1
#define __ARM_EABI__ 1
#define __ARM_ARCH_EXT_IDIV__ 1
#define __ARM_FEATURE_IDIV 1
#define __ARM_ASM_SYNTAX_UNIFIED__ 1
#define __ARM_FEATURE_COPROC 15
#define __GXX_TYPEINFO_EQUALITY_INLINE 0
#define __ELF__ 1
# 1 "<command-line>"
#define __USES_INITFINI__ 1
#define DEBUG 1
#define STM32F303xC 1
#define STM32F303 1
#define FLASH_SIZE 256
#define USE_STDPERIPH_DRIVER 1
#define PLUTOX 1
#define __NAME__ "Experience"
#define __TARGET__ "PLUTOX"
# 1 "src/main/PlutoPilot.cpp"

# 1 "./src/includes/PlutoPilot.h" 1







#define _PlutoPilot_H_ 
# 3 "src/main/PlutoPilot.cpp" 2
# 1 "./platform/Peripheral.h" 1





       

# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stdint.h" 1 3 4
# 9 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stdint.h" 3 4
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 1 3 4
# 10 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define _STDINT_H 

# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h" 1 3 4





#define _MACHINE__DEFAULT_TYPES_H 

# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\features.h" 1 3 4
# 22 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\features.h" 3 4
#define _SYS_FEATURES_H 



# 25 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\features.h" 3 4
extern "C" {


# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\_newlib_version.h" 1 3 4



#define _NEWLIB_VERSION_H__ 1

#define _NEWLIB_VERSION "2.5.0"
#define __NEWLIB__ 2
#define __NEWLIB_MINOR__ 5
#define __NEWLIB_PATCHLEVEL__ 0
# 29 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\features.h" 2 3 4




#define __GNUC_PREREQ(maj,min) ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min))






#define __GNUC_PREREQ__(ma,mi) __GNUC_PREREQ(ma, mi)
# 128 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\features.h" 3 4
#undef _DEFAULT_SOURCE
#define _DEFAULT_SOURCE 1



#undef _POSIX_SOURCE
#define _POSIX_SOURCE 1
#undef _POSIX_C_SOURCE
#define _POSIX_C_SOURCE 200809L
# 155 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\features.h" 3 4
#undef _ATFILE_SOURCE
#define _ATFILE_SOURCE 1
# 242 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\features.h" 3 4
#define __ATFILE_VISIBLE 1





#define __BSD_VISIBLE 1







#define __GNU_VISIBLE 0







#define __ISO_C_VISIBLE 1999







#define __LARGEFILE_VISIBLE 0



#define __MISC_VISIBLE 1





#define __POSIX_VISIBLE 200809
# 298 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\features.h" 3 4
#define __SVID_VISIBLE 1
# 314 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\features.h" 3 4
#define __XSI_VISIBLE 0
# 516 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\features.h" 3 4
}
# 9 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h" 2 3 4






#define __EXP(x) __ ##x ##__
# 26 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h" 3 4
#define __have_longlong64 1






#define __have_long32 1



extern "C" {



typedef signed char __int8_t;

typedef unsigned char __uint8_t;



#define ___int8_t_defined 1







typedef short int __int16_t;

typedef short unsigned int __uint16_t;



#define ___int16_t_defined 1
# 77 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h" 3 4
typedef long int __int32_t;

typedef long unsigned int __uint32_t;



#define ___int32_t_defined 1
# 103 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h" 3 4
typedef long long int __int64_t;

typedef long long unsigned int __uint64_t;



#define ___int64_t_defined 1
# 134 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h" 3 4
typedef signed char __int_least8_t;

typedef unsigned char __uint_least8_t;



#define ___int_least8_t_defined 1
# 160 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h" 3 4
typedef short int __int_least16_t;

typedef short unsigned int __uint_least16_t;



#define ___int_least16_t_defined 1
# 182 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h" 3 4
typedef long int __int_least32_t;

typedef long unsigned int __uint_least32_t;



#define ___int_least32_t_defined 1
# 200 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h" 3 4
typedef long long int __int_least64_t;

typedef long long unsigned int __uint_least64_t;



#define ___int_least64_t_defined 1







typedef long long int __intmax_t;







typedef long long unsigned int __uintmax_t;







typedef int __intptr_t;

typedef unsigned int __uintptr_t;
# 244 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\_default_types.h" 3 4
#undef __EXP


}
# 13 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 2 3 4
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 1 3 4
# 10 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 3 4
#define _SYS__INTSUP_H 





#define __STDINT_EXP(x) __ ##x ##__
# 35 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 3 4
       
       
       
       
       
       
       
#undef signed
#undef unsigned
#undef char
#undef short
#undef int
#undef __int20
#undef long
#define signed +0
#define unsigned +0
#define char +0
#define short +1
#define __int20 +2
#define int +2
#define long +4
# 64 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 3 4
#define _INTPTR_EQ_INT 






#define _INT32_EQ_LONG 







#define __INT8 "hh"
# 90 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 3 4
#define __INT16 "h"
# 101 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 3 4
#define __INT32 "l"
# 110 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 3 4
#define __INT64 "ll"






#define __FAST8 
# 126 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 3 4
#define __FAST16 






#define __FAST32 
# 144 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 3 4
#define __FAST64 "ll"



#define __LEAST8 "hh"
# 159 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 3 4
#define __LEAST16 "h"
# 170 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 3 4
#define __LEAST32 "l"
# 179 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 3 4
#define __LEAST64 "ll"

#undef signed
#undef unsigned
#undef char
#undef short
#undef int
#undef long
       
       
       
       
       
# 191 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_intsup.h" 3 4
#undef __int20
       
       
# 14 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 2 3 4
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_stdint.h" 1 3 4
# 10 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_stdint.h" 3 4
#define _SYS__STDINT_H 




extern "C" {




typedef __int8_t int8_t ;
#define _INT8_T_DECLARED 


typedef __uint8_t uint8_t ;
#define _UINT8_T_DECLARED 

#define __int8_t_defined 1




typedef __int16_t int16_t ;
#define _INT16_T_DECLARED 


typedef __uint16_t uint16_t ;
#define _UINT16_T_DECLARED 

#define __int16_t_defined 1




typedef __int32_t int32_t ;
#define _INT32_T_DECLARED 


typedef __uint32_t uint32_t ;
#define _UINT32_T_DECLARED 

#define __int32_t_defined 1




typedef __int64_t int64_t ;
#define _INT64_T_DECLARED 


typedef __uint64_t uint64_t ;
#define _UINT64_T_DECLARED 

#define __int64_t_defined 1



typedef __intmax_t intmax_t;
#define _INTMAX_T_DECLARED 



typedef __uintmax_t uintmax_t;
#define _UINTMAX_T_DECLARED 



typedef __intptr_t intptr_t;
#define _INTPTR_T_DECLARED 



typedef __uintptr_t uintptr_t;
#define _UINTPTR_T_DECLARED 



}
# 15 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 2 3 4


extern "C" {



typedef __int_least8_t int_least8_t;
typedef __uint_least8_t uint_least8_t;
#define __int_least8_t_defined 1



typedef __int_least16_t int_least16_t;
typedef __uint_least16_t uint_least16_t;
#define __int_least16_t_defined 1



typedef __int_least32_t int_least32_t;
typedef __uint_least32_t uint_least32_t;
#define __int_least32_t_defined 1



typedef __int_least64_t int_least64_t;
typedef __uint_least64_t uint_least64_t;
#define __int_least64_t_defined 1
# 51 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
  typedef int int_fast8_t;
  typedef unsigned int uint_fast8_t;
#define __int_fast8_t_defined 1







  typedef int int_fast16_t;
  typedef unsigned int uint_fast16_t;
#define __int_fast16_t_defined 1







  typedef int int_fast32_t;
  typedef unsigned int uint_fast32_t;
#define __int_fast32_t_defined 1







  typedef long long int int_fast64_t;
  typedef long long unsigned int uint_fast64_t;
#define __int_fast64_t_defined 1
# 128 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INTPTR_MIN (-__INTPTR_MAX__ - 1)
#define INTPTR_MAX (__INTPTR_MAX__)
#define UINTPTR_MAX (__UINTPTR_MAX__)
# 152 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT8_MIN (-__INT8_MAX__ - 1)
#define INT8_MAX (__INT8_MAX__)
#define UINT8_MAX (__UINT8_MAX__)







#define INT_LEAST8_MIN (-__INT_LEAST8_MAX__ - 1)
#define INT_LEAST8_MAX (__INT_LEAST8_MAX__)
#define UINT_LEAST8_MAX (__UINT_LEAST8_MAX__)
# 174 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT16_MIN (-__INT16_MAX__ - 1)
#define INT16_MAX (__INT16_MAX__)
#define UINT16_MAX (__UINT16_MAX__)







#define INT_LEAST16_MIN (-__INT_LEAST16_MAX__ - 1)
#define INT_LEAST16_MAX (__INT_LEAST16_MAX__)
#define UINT_LEAST16_MAX (__UINT_LEAST16_MAX__)
# 196 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT32_MIN (-__INT32_MAX__ - 1)
#define INT32_MAX (__INT32_MAX__)
#define UINT32_MAX (__UINT32_MAX__)
# 212 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT_LEAST32_MIN (-__INT_LEAST32_MAX__ - 1)
#define INT_LEAST32_MAX (__INT_LEAST32_MAX__)
#define UINT_LEAST32_MAX (__UINT_LEAST32_MAX__)
# 230 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT64_MIN (-__INT64_MAX__ - 1)
#define INT64_MAX (__INT64_MAX__)
#define UINT64_MAX (__UINT64_MAX__)
# 246 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT_LEAST64_MIN (-__INT_LEAST64_MAX__ - 1)
#define INT_LEAST64_MAX (__INT_LEAST64_MAX__)
#define UINT_LEAST64_MAX (__UINT_LEAST64_MAX__)
# 262 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT_FAST8_MIN (-__INT_FAST8_MAX__ - 1)
#define INT_FAST8_MAX (__INT_FAST8_MAX__)
#define UINT_FAST8_MAX (__UINT_FAST8_MAX__)
# 278 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT_FAST16_MIN (-__INT_FAST16_MAX__ - 1)
#define INT_FAST16_MAX (__INT_FAST16_MAX__)
#define UINT_FAST16_MAX (__UINT_FAST16_MAX__)
# 294 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT_FAST32_MIN (-__INT_FAST32_MAX__ - 1)
#define INT_FAST32_MAX (__INT_FAST32_MAX__)
#define UINT_FAST32_MAX (__UINT_FAST32_MAX__)
# 310 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT_FAST64_MIN (-__INT_FAST64_MAX__ - 1)
#define INT_FAST64_MAX (__INT_FAST64_MAX__)
#define UINT_FAST64_MAX (__UINT_FAST64_MAX__)
# 326 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INTMAX_MAX (__INTMAX_MAX__)
#define INTMAX_MIN (-INTMAX_MAX - 1)







#define UINTMAX_MAX (__UINTMAX_MAX__)







#define SIZE_MAX (__SIZE_MAX__)





#define SIG_ATOMIC_MIN (-__STDINT_EXP(INT_MAX) - 1)
#define SIG_ATOMIC_MAX (__STDINT_EXP(INT_MAX))



#define PTRDIFF_MAX (__PTRDIFF_MAX__)



#define PTRDIFF_MIN (-PTRDIFF_MAX - 1)




#define WCHAR_MIN (__WCHAR_MIN__)
# 374 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define WCHAR_MAX (__WCHAR_MAX__)
# 384 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define WINT_MAX (__WINT_MAX__)




#define WINT_MIN (__WINT_MIN__)






#define INT8_C(x) __INT8_C(x)
#define UINT8_C(x) __UINT8_C(x)
# 408 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT16_C(x) __INT16_C(x)
#define UINT16_C(x) __UINT16_C(x)
# 420 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT32_C(x) __INT32_C(x)
#define UINT32_C(x) __UINT32_C(x)
# 433 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INT64_C(x) __INT64_C(x)
#define UINT64_C(x) __UINT64_C(x)
# 449 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
#define INTMAX_C(x) __INTMAX_C(x)
#define UINTMAX_C(x) __UINTMAX_C(x)
# 463 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\stdint.h" 3 4
}
# 10 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stdint.h" 2 3 4



#define _GCC_WRAP_STDINT_H 
# 9 "./platform/Peripheral.h" 2

# 1 "./platform/Specifiers.h" 1





       



# 9 "./platform/Specifiers.h"
extern "C" {


typedef enum unibus {
    Pin1 = 1,
    Pin2,
    Pin3,
    Pin4,
    Pin5,
    Pin6,
    Pin7,
    Pin8,
    Pin9,
    Pin10,
    Pin11,
    Pin12,
    Pin13,
    Pin14,
    Pin15,
    Pin16,
    Pin17,
    Pin18,
    Pin19,
    Pin20
} unibus_e;


}
# 11 "./platform/Peripheral.h" 2


extern "C" {



typedef enum{
    INPUT,
    INPUT_PU,
    INPUT_PD,
    OUTPUT,
} GPIO_Mode_e;


typedef enum{
    STATE_LOW,
    STATE_HIGH,
    STATE_TOGGLE
} GPIO_State_e;



class GPIO_P {
public:

    void init(unibus_e pin_number, GPIO_Mode_e mode);

    bool read(unibus_e pin_number);

    void write(unibus_e pin_number,GPIO_State_e STATE);


};


class ADC_P {
public:

    void init(unibus_e pin_number);


    uint16_t read(unibus_e pin_number);
};



typedef enum{
    UART2,
    UART3
}UART_Port_e;


typedef enum{
    BAUD_RATE_4800,
    BAUD_RATE_9600,
    BAUD_RATE_14400,
    BAUD_RATE_19200,
    BAUD_RATE_38400,
    BAUD_RATE_57600,
    BAUD_RATE_115200,
    BAUD_RATE_128000,
    BAUD_RATE_256000
}UART_Baud_Rate_e;


class UART_P {
public:


    void init(UART_Port_e PORT, UART_Baud_Rate_e BAUD);


    uint8_t read8(UART_Port_e PORT);

    uint16_t read16(UART_Port_e PORT);

    uint32_t read32(UART_Port_e PORT);


    void write(UART_Port_e PORT, uint8_t data);

    void write(UART_Port_e PORT, const char *str);

    void write(UART_Port_e PORT, uint8_t* data, uint16_t length);

    bool rxBytesWaiting(UART_Port_e PORT);

    bool txBytesFree(UART_Port_e PORT);

};



class I2C_P {
public:


    uint8_t* read(uint8_t device_add, uint8_t reg, uint32_t length);


    bool write(uint8_t device_add, uint8_t reg, uint32_t length, uint8_t* data);

};


class PWM_P {

public:

    void init(unibus_e pin_number, uint16_t pwmRate);

    void write(unibus_e pin_number, uint16_t pwmValue);

};





extern GPIO_P GPIO;
extern ADC_P ADC;
extern UART_P UART;
extern I2C_P I2C;
extern PWM_P PWM;



}
# 4 "src/main/PlutoPilot.cpp" 2
# 1 "./platform/Utils.h" 1





       






extern "C" {



typedef enum {
    RED = 0,
    GREEN,
    BLUE

} led_e;

typedef enum {
    OFF = 0,
    ON,
    TOGGLE

} led_state_e;


typedef enum {

    ACTIVATE = 0,
    DEACTIVATE

} flightstatus_state_e;




class LED_P {
public:

    void set(led_e LED, led_state_e STATE);

    void flightStatus(flightstatus_state_e STATE);



};


class Graph_P {
public:

    void red(double value, uint8_t precision=4);

    void green(double value, uint8_t precision=4);

    void blue(double value, uint8_t precision=4);

};



class Interval {

private:

uint32_t time;
uint32_t loopTime;



public:


    bool set(uint32_t time, bool repeat);
    void reset(void);


};




class Monitor_P {

public:


void print(const char* msg);

void print(const char* tag, int number);

void print(const char* tag, double number, uint8_t precision);

void println(const char* msg);

void println(const char* tag, int number);

void println(const char* tag, double number, uint8_t precision);


};

uint32_t micros();

uint32_t millis();


extern LED_P LED;
extern Graph_P Graph;
extern Monitor_P Monitor;



}
# 5 "src/main/PlutoPilot.cpp" 2
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\math.h" 1 3
# 34 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\math.h" 3
#define _GLIBCXX_MATH_H 1

# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\cmath" 1 3
# 39 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\cmath" 3
       
# 40 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\cmath" 3

# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 1 3
# 31 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_CXX_CONFIG_H 1


#define __GLIBCXX__ 20170620
# 43 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_PURE __attribute__ ((__pure__))



#define _GLIBCXX_CONST __attribute__ ((__const__))



#define _GLIBCXX_NORETURN __attribute__ ((__noreturn__))
# 64 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY 1


#define _GLIBCXX_VISIBILITY(V) __attribute__ ((__visibility__ (#V)))
# 78 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_USE_DEPRECATED 1





#define _GLIBCXX_DEPRECATED 




#define _GLIBCXX_ABI_TAG_CXX11 __attribute ((__abi_tag__ ("cxx11")))
# 101 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_CONSTEXPR 
#define _GLIBCXX_USE_CONSTEXPR const







#define _GLIBCXX14_CONSTEXPR 
# 122 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_NOEXCEPT 
#define _GLIBCXX_NOEXCEPT_IF(_COND) 
#define _GLIBCXX_USE_NOEXCEPT throw()
#define _GLIBCXX_THROW(_EXC) throw(_EXC)




#define _GLIBCXX_NOTHROW _GLIBCXX_USE_NOEXCEPT




#define _GLIBCXX_THROW_OR_ABORT(_EXC) (throw (_EXC))
# 151 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_EXTERN_TEMPLATE 1
# 199 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3

# 199 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
namespace std
{
  typedef unsigned int size_t;
  typedef int ptrdiff_t;




}

#define _GLIBCXX_USE_DUAL_ABI 1







#define _GLIBCXX_USE_CXX11_ABI 1



namespace std
{
  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
}
namespace __gnu_cxx
{
  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
}
#define _GLIBCXX_NAMESPACE_CXX11 __cxx11::
#define _GLIBCXX_BEGIN_NAMESPACE_CXX11 namespace __cxx11 {
#define _GLIBCXX_END_NAMESPACE_CXX11 }
#define _GLIBCXX_DEFAULT_ABI_TAG _GLIBCXX_ABI_TAG_CXX11
# 242 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_INLINE_VERSION 0
# 288 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_BEGIN_NAMESPACE_VERSION 
#define _GLIBCXX_END_NAMESPACE_VERSION 
# 371 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_STD_A std



#define _GLIBCXX_STD_C std



#define _GLIBCXX_BEGIN_NAMESPACE_ALGO 



#define _GLIBCXX_END_NAMESPACE_ALGO 



#define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER 



#define _GLIBCXX_END_NAMESPACE_CONTAINER 




#undef _GLIBCXX_LONG_DOUBLE_COMPAT
# 408 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_NAMESPACE_LDBL 
#define _GLIBCXX_BEGIN_NAMESPACE_LDBL 
#define _GLIBCXX_END_NAMESPACE_LDBL 


#define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_NAMESPACE_CXX11
#define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_BEGIN_NAMESPACE_CXX11
#define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_END_NAMESPACE_CXX11
# 461 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define __glibcxx_assert(_Condition) 
# 486 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A) 


#define _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A) 



#define _GLIBCXX_BEGIN_EXTERN_C extern "C" {
#define _GLIBCXX_END_EXTERN_C }

#define _GLIBCXX_USE_ALLOCATOR_NEW 1
# 507 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\os_defines.h" 1 3
# 31 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\os_defines.h" 3
#define _GLIBCXX_OS_DEFINES 1
# 508 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 2 3


# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\cpu_defines.h" 1 3
# 31 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\cpu_defines.h" 3
#define _GLIBCXX_CPU_DEFINES 1



#define __glibcxx_integral_traps false
# 511 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 2 3




#define _GLIBCXX_PSEUDO_VISIBILITY(V) 






#define _GLIBCXX_WEAK_DEFINITION 







#define _GLIBCXX_USE_WEAK_REF __GXX_WEAK__
# 543 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_TXN_SAFE 
#define _GLIBCXX_TXN_SAFE_DYN 
# 555 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_FAST_MATH 0






#define __N(msgid) (msgid)


#undef min
#undef max
# 588 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_USE_C99_MATH _GLIBCXX98_USE_C99_MATH


#define _GLIBCXX_USE_C99_COMPLEX _GLIBCXX98_USE_C99_COMPLEX


#define _GLIBCXX_USE_C99_STDIO _GLIBCXX98_USE_C99_STDIO


#define _GLIBCXX_USE_C99_STDLIB _GLIBCXX98_USE_C99_STDLIB


#define _GLIBCXX_USE_C99_WCHAR _GLIBCXX98_USE_C99_WCHAR
# 609 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_ACOSF 1





#define _GLIBCXX_HAVE_ASINF 1





#define _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE 1


#define _GLIBCXX_HAVE_ATAN2F 1





#define _GLIBCXX_HAVE_ATANF 1
# 642 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_CEILF 1





#define _GLIBCXX_HAVE_COMPLEX_H 1


#define _GLIBCXX_HAVE_COSF 1


#define _GLIBCXX_HAVE_COSHF 1
# 669 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_EBADMSG 1


#define _GLIBCXX_HAVE_ECANCELED 1


#define _GLIBCXX_HAVE_ECHILD 1


#define _GLIBCXX_HAVE_EIDRM 1





#define _GLIBCXX_HAVE_ENODATA 1


#define _GLIBCXX_HAVE_ENOLINK 1


#define _GLIBCXX_HAVE_ENOSPC 1


#define _GLIBCXX_HAVE_ENOSR 1


#define _GLIBCXX_HAVE_ENOSTR 1


#define _GLIBCXX_HAVE_ENOTRECOVERABLE 1


#define _GLIBCXX_HAVE_ENOTSUP 1


#define _GLIBCXX_HAVE_EOVERFLOW 1


#define _GLIBCXX_HAVE_EOWNERDEAD 1


#define _GLIBCXX_HAVE_EPERM 1


#define _GLIBCXX_HAVE_EPROTO 1


#define _GLIBCXX_HAVE_ETIME 1


#define _GLIBCXX_HAVE_ETIMEDOUT 1


#define _GLIBCXX_HAVE_ETXTBSY 1


#define _GLIBCXX_HAVE_EWOULDBLOCK 1





#define _GLIBCXX_HAVE_EXPF 1





#define _GLIBCXX_HAVE_FABSF 1





#define _GLIBCXX_HAVE_FCNTL_H 1
# 759 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_FLOAT_H 1


#define _GLIBCXX_HAVE_FLOORF 1





#define _GLIBCXX_HAVE_FMODF 1
# 780 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_FREXPF 1





#define _GLIBCXX_HAVE_GETIPINFO 1


#define _GLIBCXX_HAVE_GETS 1


#define _GLIBCXX_HAVE_HYPOT 1
# 801 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_ICONV 1


#define _GLIBCXX_HAVE_IEEEFP_H 1


#define _GLIBCXX_HAVE_INT64_T 1





#define _GLIBCXX_HAVE_INT64_T_LONG_LONG 1


#define _GLIBCXX_HAVE_INTTYPES_H 1
# 837 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_ISWBLANK 1


#define _GLIBCXX_HAVE_LC_MESSAGES 1


#define _GLIBCXX_HAVE_LDEXPF 1
# 870 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_LOCALE_H 1


#define _GLIBCXX_HAVE_LOG10F 1





#define _GLIBCXX_HAVE_LOGF 1





#define _GLIBCXX_HAVE_MACHINE_ENDIAN_H 1


#define _GLIBCXX_HAVE_MACHINE_PARAM_H 1


#define _GLIBCXX_HAVE_MBSTATE_T 1


#define _GLIBCXX_HAVE_MEMORY_H 1





#define _GLIBCXX_HAVE_MODFF 1
# 918 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_POWF 1
# 942 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_SINF 1


#define _GLIBCXX_HAVE_SINHF 1
# 954 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_SLEEP 1


#define _GLIBCXX_HAVE_SQRTF 1





#define _GLIBCXX_HAVE_STDALIGN_H 1


#define _GLIBCXX_HAVE_STDBOOL_H 1


#define _GLIBCXX_HAVE_STDINT_H 1


#define _GLIBCXX_HAVE_STDLIB_H 1





#define _GLIBCXX_HAVE_STRERROR_R 1


#define _GLIBCXX_HAVE_STRINGS_H 1


#define _GLIBCXX_HAVE_STRING_H 1


#define _GLIBCXX_HAVE_STRTOF 1
# 1018 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_SYS_PARAM_H 1


#define _GLIBCXX_HAVE_SYS_RESOURCE_H 1
# 1033 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_SYS_STAT_H 1





#define _GLIBCXX_HAVE_SYS_TIME_H 1


#define _GLIBCXX_HAVE_SYS_TYPES_H 1
# 1051 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_S_ISREG 1


#define _GLIBCXX_HAVE_TANF 1


#define _GLIBCXX_HAVE_TANHF 1
# 1066 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_TGMATH_H 1
# 1075 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_HAVE_UNISTD_H 1


#define _GLIBCXX_HAVE_USLEEP 1


#define _GLIBCXX_HAVE_UTIME_H 1


#define _GLIBCXX_HAVE_VFWSCANF 1


#define _GLIBCXX_HAVE_VSWSCANF 1


#define _GLIBCXX_HAVE_VWSCANF 1


#define _GLIBCXX_HAVE_WCHAR_H 1


#define _GLIBCXX_HAVE_WCSTOF 1


#define _GLIBCXX_HAVE_WCTYPE_H 1
# 1301 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define LT_OBJDIR ".libs/"





#define _GLIBCXX_PACKAGE_BUGREPORT ""


#define _GLIBCXX_PACKAGE_NAME "package-unused"


#define _GLIBCXX_PACKAGE_STRING "package-unused version-unused"


#define _GLIBCXX_PACKAGE_TARNAME "libstdc++"


#define _GLIBCXX_PACKAGE_URL ""


#define _GLIBCXX_PACKAGE__GLIBCXX_VERSION "version-unused"
# 1340 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define STDC_HEADERS 1
# 1352 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX11_USE_C99_MATH 1



#define _GLIBCXX11_USE_C99_STDIO 1



#define _GLIBCXX11_USE_C99_STDLIB 1



#define _GLIBCXX11_USE_C99_WCHAR 1
# 1373 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX98_USE_C99_MATH 1



#define _GLIBCXX98_USE_C99_STDIO 1



#define _GLIBCXX98_USE_C99_STDLIB 1



#define _GLIBCXX98_USE_C99_WCHAR 1


#define _GLIBCXX_ATOMIC_BUILTINS 1






#define _GLIBCXX_FULLY_DYNAMIC_STRING 0





#define _GLIBCXX_HOSTED 1




#define _GLIBCXX_MANGLE_SIZE_T j


#define _GLIBCXX_PTRDIFF_T_IS_INT 1





#define _GLIBCXX_SIZE_T_IS_UINT 1


#define _GLIBCXX_STDIO_EOF -1


#define _GLIBCXX_STDIO_SEEK_CUR 1


#define _GLIBCXX_STDIO_SEEK_END 2
# 1456 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_USE_C99_CTYPE_TR1 1







#define _GLIBCXX_USE_C99_INTTYPES_TR1 1



#define _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1 1



#define _GLIBCXX_USE_C99_MATH_TR1 1



#define _GLIBCXX_USE_C99_STDINT_TR1 1
# 1493 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_USE_FCHMOD 1


#define _GLIBCXX_USE_FCHMODAT 1





#define _GLIBCXX_USE_GETTIMEOFDAY 1
# 1514 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_USE_LONG_LONG 1
# 1539 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_USE_SC_NPROCESSORS_ONLN 1
# 1554 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\arm-none-eabi\\thumb\\v7e-m\\fpv4-sp\\hard\\bits\\c++config.h" 3
#define _GLIBCXX_USE_TMPNAM 1






#define _GLIBCXX_USE_WCHAR_T 1


#define _GLIBCXX_VERBOSE 1





#define _GTHREAD_USE_MUTEX_TIMEDLOCK 1
# 42 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\cmath" 2 3
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\bits\\cpp_type_traits.h" 1 3
# 33 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\bits\\cpp_type_traits.h" 3
#define _CPP_TYPE_TRAITS_H 1

       
# 36 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\bits\\cpp_type_traits.h" 3
# 67 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\bits\\cpp_type_traits.h" 3
extern "C++" {

namespace std __attribute__ ((__visibility__ ("default")))
{


  struct __true_type { };
  struct __false_type { };

  template<bool>
    struct __truth_type
    { typedef __false_type __type; };

  template<>
    struct __truth_type<true>
    { typedef __true_type __type; };



  template<class _Sp, class _Tp>
    struct __traitor
    {
      enum { __value = bool(_Sp::__value) || bool(_Tp::__value) };
      typedef typename __truth_type<__value>::__type __type;
    };


  template<typename, typename>
    struct __are_same
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<typename _Tp>
    struct __are_same<_Tp, _Tp>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<typename _Tp>
    struct __is_void
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<>
    struct __is_void<void>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_integer
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };





  template<>
    struct __is_integer<bool>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<signed char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<>
    struct __is_integer<wchar_t>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };
# 190 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\bits\\cpp_type_traits.h" 3
  template<>
    struct __is_integer<short>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned short>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<int>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned int>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<long long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_integer<unsigned long long>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

#define __INT_N(TYPE) template<> struct __is_integer<TYPE> { enum { __value = 1 }; typedef __true_type __type; }; template<> struct __is_integer<unsigned TYPE> { enum { __value = 1 }; typedef __true_type __type; };
# 273 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\bits\\cpp_type_traits.h" 3
#undef __INT_N




  template<typename _Tp>
    struct __is_floating
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };


  template<>
    struct __is_floating<float>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_floating<double>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_floating<long double>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_pointer
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<typename _Tp>
    struct __is_pointer<_Tp*>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_arithmetic
    : public __traitor<__is_integer<_Tp>, __is_floating<_Tp> >
    { };




  template<typename _Tp>
    struct __is_scalar
    : public __traitor<__is_arithmetic<_Tp>, __is_pointer<_Tp> >
    { };




  template<typename _Tp>
    struct __is_char
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<>
    struct __is_char<char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<>
    struct __is_char<wchar_t>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };


  template<typename _Tp>
    struct __is_byte
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };

  template<>
    struct __is_byte<char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_byte<signed char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };

  template<>
    struct __is_byte<unsigned char>
    {
      enum { __value = 1 };
      typedef __true_type __type;
    };




  template<typename _Tp>
    struct __is_move_iterator
    {
      enum { __value = 0 };
      typedef __false_type __type;
    };



  template<typename _Iterator>
    inline _Iterator
    __miter_base(_Iterator __it)
    { return __it; }


}
}
# 43 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\cmath" 2 3
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\ext\\type_traits.h" 1 3
# 30 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\ext\\type_traits.h" 3
#define _EXT_TYPE_TRAITS 1

       
# 33 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\ext\\type_traits.h" 3




extern "C++" {

namespace __gnu_cxx __attribute__ ((__visibility__ ("default")))
{



  template<bool, typename>
    struct __enable_if
    { };

  template<typename _Tp>
    struct __enable_if<true, _Tp>
    { typedef _Tp __type; };



  template<bool _Cond, typename _Iftrue, typename _Iffalse>
    struct __conditional_type
    { typedef _Iftrue __type; };

  template<typename _Iftrue, typename _Iffalse>
    struct __conditional_type<false, _Iftrue, _Iffalse>
    { typedef _Iffalse __type; };



  template<typename _Tp>
    struct __add_unsigned
    {
    private:
      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;

    public:
      typedef typename __if_type::__type __type;
    };

  template<>
    struct __add_unsigned<char>
    { typedef unsigned char __type; };

  template<>
    struct __add_unsigned<signed char>
    { typedef unsigned char __type; };

  template<>
    struct __add_unsigned<short>
    { typedef unsigned short __type; };

  template<>
    struct __add_unsigned<int>
    { typedef unsigned int __type; };

  template<>
    struct __add_unsigned<long>
    { typedef unsigned long __type; };

  template<>
    struct __add_unsigned<long long>
    { typedef unsigned long long __type; };


  template<>
    struct __add_unsigned<bool>;

  template<>
    struct __add_unsigned<wchar_t>;



  template<typename _Tp>
    struct __remove_unsigned
    {
    private:
      typedef __enable_if<std::__is_integer<_Tp>::__value, _Tp> __if_type;

    public:
      typedef typename __if_type::__type __type;
    };

  template<>
    struct __remove_unsigned<char>
    { typedef signed char __type; };

  template<>
    struct __remove_unsigned<unsigned char>
    { typedef signed char __type; };

  template<>
    struct __remove_unsigned<unsigned short>
    { typedef short __type; };

  template<>
    struct __remove_unsigned<unsigned int>
    { typedef int __type; };

  template<>
    struct __remove_unsigned<unsigned long>
    { typedef long __type; };

  template<>
    struct __remove_unsigned<unsigned long long>
    { typedef long long __type; };


  template<>
    struct __remove_unsigned<bool>;

  template<>
    struct __remove_unsigned<wchar_t>;



  template<typename _Type>
    inline bool
    __is_null_pointer(_Type* __ptr)
    { return __ptr == 0; }

  template<typename _Type>
    inline bool
    __is_null_pointer(_Type)
    { return false; }
# 167 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\ext\\type_traits.h" 3
  template<typename _Tp, bool = std::__is_integer<_Tp>::__value>
    struct __promote
    { typedef double __type; };




  template<typename _Tp>
    struct __promote<_Tp, false>
    { };

  template<>
    struct __promote<long double>
    { typedef long double __type; };

  template<>
    struct __promote<double>
    { typedef double __type; };

  template<>
    struct __promote<float>
    { typedef float __type; };

  template<typename _Tp, typename _Up,
           typename _Tp2 = typename __promote<_Tp>::__type,
           typename _Up2 = typename __promote<_Up>::__type>
    struct __promote_2
    {
      typedef __typeof__(_Tp2() + _Up2()) __type;
    };

  template<typename _Tp, typename _Up, typename _Vp,
           typename _Tp2 = typename __promote<_Tp>::__type,
           typename _Up2 = typename __promote<_Up>::__type,
           typename _Vp2 = typename __promote<_Vp>::__type>
    struct __promote_3
    {
      typedef __typeof__(_Tp2() + _Up2() + _Vp2()) __type;
    };

  template<typename _Tp, typename _Up, typename _Vp, typename _Wp,
           typename _Tp2 = typename __promote<_Tp>::__type,
           typename _Up2 = typename __promote<_Up>::__type,
           typename _Vp2 = typename __promote<_Vp>::__type,
           typename _Wp2 = typename __promote<_Wp>::__type>
    struct __promote_4
    {
      typedef __typeof__(_Tp2() + _Up2() + _Vp2() + _Wp2()) __type;
    };


}
}
# 44 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\cmath" 2 3
#define _GLIBCXX_INCLUDE_NEXT_C_HEADERS 
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 1 3


#define _MATH_H_ 

# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 1 3
# 9 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 3
extern "C" {

#define _SYS_REENT_H_ 

# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\_ansi.h" 1 3
# 13 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\_ansi.h" 3
#define _ANSIDECL_H_ 

# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\newlib.h" 1 3







#define __NEWLIB_H__ 1
# 21 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\newlib.h" 3
#define _WANT_IO_LONG_LONG 1


#define _WANT_REGISTER_FINI 1
# 40 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\newlib.h" 3
#define _MB_LEN_MAX 1
# 50 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\newlib.h" 3
#define HAVE_INITFINI_ARRAY 1



#define _ATEXIT_DYNAMIC_ALLOC 1


#define _HAVE_LONG_DOUBLE 1


#define _HAVE_CC_INHIBIT_LOOP_TO_LIBCALL 1


#define _LDBL_EQ_DBL 1


#define _FVWRITE_IN_STREAMIO 1


#define _FSEEK_OPTIMIZATION 1


#define _WIDE_ORIENT 1


#define _UNBUF_STREAM_OPT 1
# 87 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\newlib.h" 3
#define _RETARGETABLE_LOCKING 1
# 16 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\_ansi.h" 2 3
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\config.h" 1 3

#define __SYS_CONFIG_H__ 

# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\ieeefp.h" 1 3
# 60 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\ieeefp.h" 3
#define __IEEE_LITTLE_ENDIAN 
# 5 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\config.h" 2 3
# 219 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\config.h" 3
#define _POINTER_INT long





#undef __RAND_MAX



#define __RAND_MAX 0x7fffffff
# 244 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\config.h" 3
#define __EXPORT 



#define __IMPORT 






#define _READ_WRITE_RETURN_TYPE int





#define _READ_WRITE_BUFSIZE_TYPE int
# 17 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\_ansi.h" 2 3






#define _HAVE_STDC 
# 34 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\_ansi.h" 3
#define _BEGIN_STD_C extern "C" {
#define _END_STD_C }


#define _NOTHROW __attribute__ ((__nothrow__))
# 50 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\_ansi.h" 3
#define _PTR void *
#define _AND ,
#define _NOARGS void
#define _CONST const
#define _VOLATILE volatile
#define _SIGNED signed
#define _DOTS , ...
#define _VOID void






#define _EXFUN_NOTHROW(name,proto) name proto _NOTHROW
#define _EXFUN(name,proto) name proto
#define _EXPARM(name,proto) (* name) proto
#define _EXFNPTR(name,proto) (* name) proto

#define _DEFUN(name,arglist,args) name(args)
#define _DEFUN_VOID(name) name(_NOARGS)
#define _CAST_VOID (void)

#define _LONG_DOUBLE long double


#define _PARAMS(paramlist) paramlist
# 101 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\_ansi.h" 3
#define _ATTRIBUTE(attrs) __attribute__ (attrs)
# 123 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\_ansi.h" 3
#define _ELIDABLE_INLINE extern __inline__ _ATTRIBUTE ((__always_inline__))







#define _NOINLINE __attribute__ ((__noinline__))
#define _NOINLINE_STATIC _NOINLINE static
# 14 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 2 3
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 1 3 4
# 39 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#define _STDDEF_H 
#define _STDDEF_H_ 

#define _ANSI_STDDEF_H 
# 137 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#define _PTRDIFF_T 
#define _T_PTRDIFF_ 
#define _T_PTRDIFF 
#define __PTRDIFF_T 
#define _PTRDIFF_T_ 
#define _BSD_PTRDIFF_T_ 
#define ___int_ptrdiff_t_h 
#define _GCC_PTRDIFF_T 
#define _PTRDIFF_T_DECLARED 



typedef int ptrdiff_t;
# 161 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#undef __need_ptrdiff_t
# 187 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#define __size_t__ 
#define __SIZE_T__ 
#define _SIZE_T 
#define _SYS_SIZE_T_H 
#define _T_SIZE_ 
#define _T_SIZE 
#define __SIZE_T 
#define _SIZE_T_ 
#define _BSD_SIZE_T_ 
#define _SIZE_T_DEFINED_ 
#define _SIZE_T_DEFINED 
#define _BSD_SIZE_T_DEFINED_ 
#define _SIZE_T_DECLARED 
#define ___int_size_t_h 
#define _GCC_SIZE_T 
#define _SIZET_ 







#define __size_t 





typedef unsigned int size_t;
# 238 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#undef __need_size_t
# 267 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#define __wchar_t__ 
#define __WCHAR_T__ 
#define _WCHAR_T 
#define _T_WCHAR_ 
#define _T_WCHAR 
#define __WCHAR_T 
#define _WCHAR_T_ 
#define _BSD_WCHAR_T_ 
#define _WCHAR_T_DEFINED_ 
#define _WCHAR_T_DEFINED 
#define _WCHAR_T_H 
#define ___int_wchar_t_h 
#define __INT_WCHAR_T_H 
#define _GCC_WCHAR_T 
#define _WCHAR_T_DECLARED 
# 294 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#undef _BSD_WCHAR_T_
# 347 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#undef __need_wchar_t
# 401 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#undef NULL

#define NULL __null
# 412 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#undef __need_NULL




#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
# 15 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 2 3
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_types.h" 1 3
# 20 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_types.h" 3
#define _SYS__TYPES_H 



# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\_types.h" 1 3





#define _MACHINE__TYPES_H 
# 25 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_types.h" 2 3
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\lock.h" 1 3

#define __SYS_LOCK_H__ 
# 30 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\lock.h" 3
extern "C" {


struct __lock;
typedef struct __lock * _LOCK_T;
#define _LOCK_RECURSIVE_T _LOCK_T

#define __LOCK_INIT(class,lock) extern struct __lock __lock_ ## lock; class _LOCK_T lock = &__lock_ ## lock

#define __LOCK_INIT_RECURSIVE(class,lock) __LOCK_INIT(class,lock)

extern void __retarget_lock_init(_LOCK_T *lock);
#define __lock_init(lock) __retarget_lock_init(&lock)
extern void __retarget_lock_init_recursive(_LOCK_T *lock);
#define __lock_init_recursive(lock) __retarget_lock_init_recursive(&lock)
extern void __retarget_lock_close(_LOCK_T lock);
#define __lock_close(lock) __retarget_lock_close(lock)
extern void __retarget_lock_close_recursive(_LOCK_T lock);
#define __lock_close_recursive(lock) __retarget_lock_close_recursive(lock)
extern void __retarget_lock_acquire(_LOCK_T lock);
#define __lock_acquire(lock) __retarget_lock_acquire(lock)
extern void __retarget_lock_acquire_recursive(_LOCK_T lock);
#define __lock_acquire_recursive(lock) __retarget_lock_acquire_recursive(lock)
extern int __retarget_lock_try_acquire(_LOCK_T lock);
#define __lock_try_acquire(lock) __retarget_lock_try_acquire(lock)
extern int __retarget_lock_try_acquire_recursive(_LOCK_T lock);
#define __lock_try_acquire_recursive(lock) __retarget_lock_try_acquire_recursive(lock)

extern void __retarget_lock_release(_LOCK_T lock);
#define __lock_release(lock) __retarget_lock_release(lock)
extern void __retarget_lock_release_recursive(_LOCK_T lock);
#define __lock_release_recursive(lock) __retarget_lock_release_recursive(lock)


}
# 26 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_types.h" 2 3


typedef long __blkcnt_t;



typedef long __blksize_t;



typedef __uint64_t __fsblkcnt_t;



typedef __uint32_t __fsfilcnt_t;



typedef long _off_t;





typedef int __pid_t;



typedef short __dev_t;



typedef unsigned short __uid_t;


typedef unsigned short __gid_t;



typedef __uint32_t __id_t;







typedef unsigned short __ino_t;
# 88 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_types.h" 3
typedef __uint32_t __mode_t;





__extension__ typedef long long _off64_t;





typedef _off_t __off_t;


typedef _off64_t __loff_t;


typedef long __key_t;







typedef long _fpos_t;
# 125 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_types.h" 3
#undef __size_t



typedef unsigned int __size_t;
# 144 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_types.h" 3
#define unsigned signed
typedef signed int _ssize_t;
#undef unsigned
# 156 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_types.h" 3
typedef _ssize_t __ssize_t;

#define __need_wint_t 
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 1 3 4
# 161 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#undef __need_ptrdiff_t
# 238 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#undef __need_size_t
# 347 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#undef __need_wchar_t




#define _WINT_T 




typedef unsigned int wint_t;

#undef __need_wint_t
# 401 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#undef NULL

#define NULL __null
# 412 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 3 4
#undef __need_NULL




#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
# 160 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\_types.h" 2 3



typedef struct
{
  int __count;
  union
  {
    wint_t __wch;
    unsigned char __wchb[4];
  } __value;
} _mbstate_t;



typedef _LOCK_T _flock_t;




typedef void *_iconv_t;


#define _CLOCK_T_ unsigned long
typedef unsigned long __clock_t;

#define _TIME_T_ long
typedef long __time_t;

#define _CLOCKID_T_ unsigned long
typedef unsigned long __clockid_t;

#define _TIMER_T_ unsigned long
typedef unsigned long __timer_t;


typedef __uint8_t __sa_family_t;



typedef __uint32_t __socklen_t;


typedef unsigned short __nlink_t;
typedef long __suseconds_t;
typedef unsigned long __useconds_t;




typedef char * __va_list;
# 16 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 2 3

#define _NULL 0



#define __Long long
typedef unsigned long __ULong;
# 38 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 3
struct _reent;

struct __locale_t;






struct _Bigint
{
  struct _Bigint *_next;
  int _k, _maxwds, _sign, _wds;
  __ULong _x[1];
};


struct __tm
{
  int __tm_sec;
  int __tm_min;
  int __tm_hour;
  int __tm_mday;
  int __tm_mon;
  int __tm_year;
  int __tm_wday;
  int __tm_yday;
  int __tm_isdst;
};





#define _ATEXIT_SIZE 32

struct _on_exit_args {
 void * _fnargs[32];
 void * _dso_handle[32];

 __ULong _fntypes;


 __ULong _is_cxa;
};
# 93 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 3
struct _atexit {
 struct _atexit *_next;
 int _ind;

 void (*_fns[32])(void);
        struct _on_exit_args _on_exit_args;
};
#define _ATEXIT_INIT {_NULL, 0, {_NULL}, {{_NULL}, {_NULL}, 0, 0}}





#define _REENT_INIT_ATEXIT _NULL, _ATEXIT_INIT,
# 117 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 3
struct __sbuf {
 unsigned char *_base;
 int _size;
};
# 178 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 3
#define _REENT_SMALL_CHECK_INIT(ptr) 


struct __sFILE {
  unsigned char *_p;
  int _r;
  int _w;
  short _flags;
  short _file;
  struct __sbuf _bf;
  int _lbfsize;






  void * _cookie;

  int (* _read) (struct _reent *, void *, char *, int)
                                          ;
  int (* _write) (struct _reent *, void *, const char *, int)

                                   ;
  _fpos_t (* _seek) (struct _reent *, void *, _fpos_t, int);
  int (* _close) (struct _reent *, void *);


  struct __sbuf _ub;
  unsigned char *_up;
  int _ur;


  unsigned char _ubuf[3];
  unsigned char _nbuf[1];


  struct __sbuf _lb;


  int _blksize;
  _off_t _offset;


  struct _reent *_data;



  _flock_t _lock;

  _mbstate_t _mbstate;
  int _flags2;
};
# 287 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 3
typedef struct __sFILE __FILE;



struct _glue
{
  struct _glue *_next;
  int _niobs;
  __FILE *_iobs;
};
# 312 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 3
#define _RAND48_SEED_0 (0x330e)
#define _RAND48_SEED_1 (0xabcd)
#define _RAND48_SEED_2 (0x1234)
#define _RAND48_MULT_0 (0xe66d)
#define _RAND48_MULT_1 (0xdeec)
#define _RAND48_MULT_2 (0x0005)
#define _RAND48_ADD (0x000b)
struct _rand48 {
  unsigned short _seed[3];
  unsigned short _mult[3];
  unsigned short _add;




};


#define _REENT_EMERGENCY_SIZE 25
#define _REENT_ASCTIME_SIZE 26
#define _REENT_SIGNAL_SIZE 24
# 569 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 3
struct _reent
{
  int _errno;




  __FILE *_stdin, *_stdout, *_stderr;

  int _inc;
  char _emergency[25];


  int _unspecified_locale_info;
  struct __locale_t *_locale;

  int __sdidinit;

  void (* __cleanup) (struct _reent *);


  struct _Bigint *_result;
  int _result_k;
  struct _Bigint *_p5s;
  struct _Bigint **_freelist;


  int _cvtlen;
  char *_cvtbuf;

  union
    {
      struct
        {
          unsigned int _unused_rand;
          char * _strtok_last;
          char _asctime_buf[26];
          struct __tm _localtime_buf;
          int _gamma_signgam;
          __extension__ unsigned long long _rand_next;
          struct _rand48 _r48;
          _mbstate_t _mblen_state;
          _mbstate_t _mbtowc_state;
          _mbstate_t _wctomb_state;
          char _l64a_buf[8];
          char _signal_buf[24];
          int _getdate_err;
          _mbstate_t _mbrlen_state;
          _mbstate_t _mbrtowc_state;
          _mbstate_t _mbsrtowcs_state;
          _mbstate_t _wcrtomb_state;
          _mbstate_t _wcsrtombs_state;
   int _h_errno;
        } _reent;



      struct
        {
#define _N_LISTS 30
          unsigned char * _nextf[30];
          unsigned int _nmalloc[30];
        } _unused;
    } _new;



  struct _atexit *_atexit;
  struct _atexit _atexit0;



  void (**(_sig_func))(int);




  struct _glue __sglue;
  __FILE __sf[3];
};

#define _REENT_INIT(var) { 0, &(var).__sf[0], &(var).__sf[1], &(var).__sf[2], 0, "", 0, _NULL, 0, _NULL, _NULL, 0, _NULL, _NULL, 0, _NULL, { { 0, _NULL, "", {0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 1, { {_RAND48_SEED_0, _RAND48_SEED_1, _RAND48_SEED_2}, {_RAND48_MULT_0, _RAND48_MULT_1, _RAND48_MULT_2}, _RAND48_ADD }, {0, {0}}, {0, {0}}, {0, {0}}, "", "", 0, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}} } }, _REENT_INIT_ATEXIT _NULL, {_NULL, 0, _NULL} }
# 698 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 3
#define _REENT_INIT_PTR_ZEROED(var) { (var)->_stdin = &(var)->__sf[0]; (var)->_stdout = &(var)->__sf[1]; (var)->_stderr = &(var)->__sf[2]; (var)->_new._reent._rand_next = 1; (var)->_new._reent._r48._seed[0] = _RAND48_SEED_0; (var)->_new._reent._r48._seed[1] = _RAND48_SEED_1; (var)->_new._reent._r48._seed[2] = _RAND48_SEED_2; (var)->_new._reent._r48._mult[0] = _RAND48_MULT_0; (var)->_new._reent._r48._mult[1] = _RAND48_MULT_1; (var)->_new._reent._r48._mult[2] = _RAND48_MULT_2; (var)->_new._reent._r48._add = _RAND48_ADD; }
# 712 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 3
#define _REENT_CHECK_RAND48(ptr) 
#define _REENT_CHECK_MP(ptr) 
#define _REENT_CHECK_TM(ptr) 
#define _REENT_CHECK_ASCTIME_BUF(ptr) 
#define _REENT_CHECK_EMERGENCY(ptr) 
#define _REENT_CHECK_MISC(ptr) 
#define _REENT_CHECK_SIGNAL_BUF(ptr) 

#define _REENT_SIGNGAM(ptr) ((ptr)->_new._reent._gamma_signgam)
#define _REENT_RAND_NEXT(ptr) ((ptr)->_new._reent._rand_next)
#define _REENT_RAND48_SEED(ptr) ((ptr)->_new._reent._r48._seed)
#define _REENT_RAND48_MULT(ptr) ((ptr)->_new._reent._r48._mult)
#define _REENT_RAND48_ADD(ptr) ((ptr)->_new._reent._r48._add)
#define _REENT_MP_RESULT(ptr) ((ptr)->_result)
#define _REENT_MP_RESULT_K(ptr) ((ptr)->_result_k)
#define _REENT_MP_P5S(ptr) ((ptr)->_p5s)
#define _REENT_MP_FREELIST(ptr) ((ptr)->_freelist)
#define _REENT_ASCTIME_BUF(ptr) ((ptr)->_new._reent._asctime_buf)
#define _REENT_TM(ptr) (&(ptr)->_new._reent._localtime_buf)
#define _REENT_EMERGENCY(ptr) ((ptr)->_emergency)
#define _REENT_STRTOK_LAST(ptr) ((ptr)->_new._reent._strtok_last)
#define _REENT_MBLEN_STATE(ptr) ((ptr)->_new._reent._mblen_state)
#define _REENT_MBTOWC_STATE(ptr) ((ptr)->_new._reent._mbtowc_state)
#define _REENT_WCTOMB_STATE(ptr) ((ptr)->_new._reent._wctomb_state)
#define _REENT_MBRLEN_STATE(ptr) ((ptr)->_new._reent._mbrlen_state)
#define _REENT_MBRTOWC_STATE(ptr) ((ptr)->_new._reent._mbrtowc_state)
#define _REENT_MBSRTOWCS_STATE(ptr) ((ptr)->_new._reent._mbsrtowcs_state)
#define _REENT_WCRTOMB_STATE(ptr) ((ptr)->_new._reent._wcrtomb_state)
#define _REENT_WCSRTOMBS_STATE(ptr) ((ptr)->_new._reent._wcsrtombs_state)
#define _REENT_L64A_BUF(ptr) ((ptr)->_new._reent._l64a_buf)
#define _REENT_SIGNAL_BUF(ptr) ((ptr)->_new._reent._signal_buf)
#define _REENT_GETDATE_ERR_P(ptr) (&((ptr)->_new._reent._getdate_err))



#define _REENT_INIT_PTR(var) { memset((var), 0, sizeof(*(var))); _REENT_INIT_PTR_ZEROED(var); }







#define _Kmax (sizeof (size_t) << 3)







#define __ATTRIBUTE_IMPURE_PTR__ 


extern struct _reent *_impure_ptr ;
extern struct _reent *const _global_impure_ptr ;

void _reclaim_reent (struct _reent *);
# 779 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\reent.h" 3
#define _REENT _impure_ptr


#define _GLOBAL_REENT _global_impure_ptr





#define _GLOBAL_ATEXIT (_GLOBAL_REENT->_atexit)



}
# 6 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 2 3
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 1 3
# 41 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define _SYS_CDEFS_H_ 



# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h" 1 3 4
# 46 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 2 3

#define __PMT(args) args
#define __DOTS , ...
#define __THROW 


#define __ASMNAME(cname) __XSTRING (__USER_LABEL_PREFIX__) cname


#define __ptr_t void *
#define __long_double_t long double

#define __attribute_malloc__ 
#define __attribute_pure__ 
#define __attribute_format_strfmon__(a,b) 
#define __flexarr [0]


#define __bounded 
#define __unbounded 
#define __ptrvalue 
# 76 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __has_extension __has_feature


#define __has_feature(x) 0





#define __has_builtin(x) 0



#define __BEGIN_DECLS extern "C" {
#define __END_DECLS }
# 105 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __GNUCLIKE_ASM 3
#define __GNUCLIKE_MATH_BUILTIN_CONSTANTS 



#define __GNUCLIKE___TYPEOF 1
#define __GNUCLIKE___OFFSETOF 1
#define __GNUCLIKE___SECTION 1


#define __GNUCLIKE_CTOR_SECTION_HANDLING 1


#define __GNUCLIKE_BUILTIN_CONSTANT_P 1






#define __GNUCLIKE_BUILTIN_VARARGS 1
#define __GNUCLIKE_BUILTIN_STDARG 1
#define __GNUCLIKE_BUILTIN_VAALIST 1



#define __GNUC_VA_LIST_COMPATIBILITY 1






#define __compiler_membar() __asm __volatile(" " : : : "memory")



#define __GNUCLIKE_BUILTIN_NEXT_ARG 1
#define __GNUCLIKE_MATH_BUILTIN_RELOPS 


#define __GNUCLIKE_BUILTIN_MEMCPY 1


#define __CC_SUPPORTS_INLINE 1
#define __CC_SUPPORTS___INLINE 1
#define __CC_SUPPORTS___INLINE__ 1

#define __CC_SUPPORTS___FUNC__ 1
#define __CC_SUPPORTS_WARNING 1

#define __CC_SUPPORTS_VARADIC_XXX 1

#define __CC_SUPPORTS_DYNAMIC_ARRAY_INIT 1
# 175 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __P(protos) protos
#define __CONCAT1(x,y) x ## y
#define __CONCAT(x,y) __CONCAT1(x,y)
#define __STRING(x) #x
#define __XSTRING(x) __STRING(x)

#define __const const
#define __signed signed
#define __volatile volatile

#define __inline inline
# 239 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __weak_symbol __attribute__((__weak__))
# 252 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __dead2 __attribute__((__noreturn__))
#define __pure2 __attribute__((__const__))
#define __unused __attribute__((__unused__))
#define __used __attribute__((__used__))
#define __packed __attribute__((__packed__))
#define __aligned(x) __attribute__((__aligned__(x)))
#define __section(x) __attribute__((__section__(x)))


#define __alloc_size(x) __attribute__((__alloc_size__(x)))




#define __alloc_align(x) __attribute__((__alloc_align__(x)))
# 288 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define _Alignas(x) __aligned(x)






#define _Alignof(x) __alignof(x)
# 310 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define _Noreturn __dead2
# 339 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define _Thread_local __thread
# 376 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __min_size(x) (x)



#define __malloc_like __attribute__((__malloc__))
#define __pure __attribute__((__pure__))






#define __always_inline __attribute__((__always_inline__))





#define __noinline __attribute__ ((__noinline__))





#define __nonnull(x) __attribute__((__nonnull__(x)))
#define __nonnull_all __attribute__((__nonnull__))






#define __fastcall __attribute__((__fastcall__))
#define __result_use_check __attribute__((__warn_unused_result__))






#define __returns_twice __attribute__((__returns_twice__))





#define __unreachable() __builtin_unreachable()
# 440 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __restrict 
# 475 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __predict_true(exp) __builtin_expect((exp), 1)
#define __predict_false(exp) __builtin_expect((exp), 0)






#define __null_sentinel __attribute__((__sentinel__))
#define __exported __attribute__((__visibility__("default")))


#define __hidden __attribute__((__visibility__("hidden")))
# 497 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __offsetof(type,field) offsetof(type, field)
#define __rangeof(type,start,end) (__offsetof(type, end) - __offsetof(type, start))
# 508 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __containerof(x,s,m) ({ const volatile __typeof(((s *)0)->m) *__x = (x); __DEQUALIFY(s *, (const volatile char *)__x - __offsetof(s, m));})
# 530 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __printflike(fmtarg,firstvararg) __attribute__((__format__ (__printf__, fmtarg, firstvararg)))

#define __scanflike(fmtarg,firstvararg) __attribute__((__format__ (__scanf__, fmtarg, firstvararg)))

#define __format_arg(fmtarg) __attribute__((__format_arg__ (fmtarg)))
#define __strfmonlike(fmtarg,firstvararg) __attribute__((__format__ (__strfmon__, fmtarg, firstvararg)))

#define __strftimelike(fmtarg,firstvararg) __attribute__((__format__ (__strftime__, fmtarg, firstvararg)))
# 547 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __printf0like(fmtarg,firstvararg) 




#define __strong_reference(sym,aliassym) extern __typeof (sym) aliassym __attribute__ ((__alias__ (#sym)))




#define __weak_reference(sym,alias) __asm__(".weak " #alias); __asm__(".equ " #alias ", " #sym)


#define __warn_references(sym,msg) __asm__(".section .gnu.warning." #sym); __asm__(".asciz \"" msg "\""); __asm__(".previous")



#define __sym_compat(sym,impl,verid) __asm__(".symver " #impl ", " #sym "@" #verid)

#define __sym_default(sym,impl,verid) __asm__(".symver " #impl ", " #sym "@@" #verid)
# 601 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __FBSDID(s) struct __hack



#define __RCSID(s) struct __hack



#define __RCSID_SOURCE(s) struct __hack



#define __SCCSID(s) struct __hack



#define __COPYRIGHT(s) struct __hack



#define __DECONST(type,var) ((type)(__uintptr_t)(const void *)(var))



#define __DEVOLATILE(type,var) ((type)(__uintptr_t)(volatile void *)(var))



#define __DEQUALIFY(type,var) ((type)(__uintptr_t)(const volatile void *)(var))






#define _Nonnull 
#define _Nullable 
#define _Null_unspecified 
#define __NULLABILITY_PRAGMA_PUSH 
#define __NULLABILITY_PRAGMA_POP 
# 661 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __arg_type_tag(arg_kind,arg_idx,type_tag_idx) 
#define __datatype_type_tag(kind,type) 
# 680 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\sys\\cdefs.h" 3
#define __lock_annotate(x) 



#define __lockable __lock_annotate(lockable)


#define __locks_exclusive(...) __lock_annotate(exclusive_lock_function(__VA_ARGS__))

#define __locks_shared(...) __lock_annotate(shared_lock_function(__VA_ARGS__))



#define __trylocks_exclusive(...) __lock_annotate(exclusive_trylock_function(__VA_ARGS__))

#define __trylocks_shared(...) __lock_annotate(shared_trylock_function(__VA_ARGS__))



#define __unlocks(...) __lock_annotate(unlock_function(__VA_ARGS__))


#define __asserts_exclusive(...) __lock_annotate(assert_exclusive_lock(__VA_ARGS__))

#define __asserts_shared(...) __lock_annotate(assert_shared_lock(__VA_ARGS__))



#define __requires_exclusive(...) __lock_annotate(exclusive_locks_required(__VA_ARGS__))

#define __requires_shared(...) __lock_annotate(shared_locks_required(__VA_ARGS__))

#define __requires_unlocked(...) __lock_annotate(locks_excluded(__VA_ARGS__))



#define __no_lock_analysis __lock_annotate(no_thread_safety_analysis)


#define __guarded_by(x) __lock_annotate(guarded_by(x))
#define __pt_guarded_by(x) __lock_annotate(pt_guarded_by(x))
# 7 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 2 3
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\machine\\ieeefp.h" 1 3
# 8 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 2 3
# 1 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\_ansi.h" 1 3
# 9 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 2 3

extern "C" {


#define _M_LN2 0.693147180559945309417





#define HUGE_VAL (__builtin_huge_val())



#define HUGE_VALF (__builtin_huge_valf())



#define HUGE_VALL (__builtin_huge_vall())



#define INFINITY (__builtin_inff())



#define NAN (__builtin_nanf(""))
# 86 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 3
extern double atan (double);
extern double cos (double);
extern double sin (double);
extern double tan (double);
extern double tanh (double);
extern double frexp (double, int *);
extern double modf (double, double *);
extern double ceil (double);
extern double fabs (double);
extern double floor (double);






extern double acos (double);
extern double asin (double);
extern double atan2 (double, double);
extern double cosh (double);
extern double sinh (double);
extern double exp (double);
extern double ldexp (double, int);
extern double log (double);
extern double log10 (double);
extern double pow (double, double);
extern double sqrt (double);
extern double fmod (double, double);




extern int finite (double);
extern int finitef (float);
extern int finitel (long double);
extern int isinff (float);
extern int isnanf (float);





extern int isinf (double);




extern int isnan (double);
# 145 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 3
#define FLT_EVAL_METHOD __FLT_EVAL_METHOD__
#define __TMP_FLT_EVAL_METHOD 



    typedef float float_t;
    typedef double double_t;
# 168 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 3
#undef FLT_EVAL_METHOD


#define FP_NAN 0
#define FP_INFINITE 1
#define FP_ZERO 2
#define FP_SUBNORMAL 3
#define FP_NORMAL 4


#define FP_ILOGB0 (-__INT_MAX__)


#define FP_ILOGBNAN __INT_MAX__



#define MATH_ERRNO 1


#define MATH_ERREXCEPT 2


#define math_errhandling MATH_ERRNO


extern int __isinff (float x);
extern int __isinfd (double x);
extern int __isnanf (float x);
extern int __isnand (double x);
extern int __fpclassifyf (float x);
extern int __fpclassifyd (double x);
extern int __signbitf (float x);
extern int __signbitd (double x);
# 211 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 3
#define fpclassify(__x) (__builtin_fpclassify (FP_NAN, FP_INFINITE, FP_NORMAL, FP_SUBNORMAL, FP_ZERO, __x))



#define isfinite(__x) (__builtin_isfinite (__x))


#define isinf(__x) (__builtin_isinf_sign (__x))


#define isnan(__x) (__builtin_isnan (__x))

#define isnormal(__x) (__builtin_isnormal (__x))
# 244 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 3
#define signbit(__x) ((sizeof(__x) == sizeof(float)) ? __builtin_signbitf(__x) : (sizeof(__x) == sizeof(double)) ? __builtin_signbit (__x) : __builtin_signbitl(__x))
# 260 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 3
#define isgreater(__x,__y) (__builtin_isgreater (__x, __y))
#define isgreaterequal(__x,__y) (__builtin_isgreaterequal (__x, __y))
#define isless(__x,__y) (__builtin_isless (__x, __y))
#define islessequal(__x,__y) (__builtin_islessequal (__x, __y))
#define islessgreater(__x,__y) (__builtin_islessgreater (__x, __y))
#define isunordered(__x,__y) (__builtin_isunordered (__x, __y))
# 290 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 3
extern double infinity (void);
extern double nan (const char *);
extern double copysign (double, double);
extern double logb (double);
extern int ilogb (double);

extern double asinh (double);
extern double cbrt (double);
extern double nextafter (double, double);
extern double rint (double);
extern double scalbn (double, int);

extern double exp2 (double);
extern double scalbln (double, long int);
extern double tgamma (double);
extern double nearbyint (double);
extern long int lrint (double);
extern long long int llrint (double);
extern double round (double);
extern long int lround (double);
extern long long int llround (double);
extern double trunc (double);
extern double remquo (double, double, int *);
extern double fdim (double, double);
extern double fmax (double, double);
extern double fmin (double, double);
extern double fma (double, double, double);


extern double log1p (double);
extern double expm1 (double);



extern double acosh (double);
extern double atanh (double);
extern double remainder (double, double);
extern double gamma (double);
extern double lgamma (double);
extern double erf (double);
extern double erfc (double);
extern double log2 (double);





extern double hypot (double, double);






extern float atanf (float);
extern float cosf (float);
extern float sinf (float);
extern float tanf (float);
extern float tanhf (float);
extern float frexpf (float, int *);
extern float modff (float, float *);
extern float ceilf (float);
extern float fabsf (float);
extern float floorf (float);


extern float acosf (float);
extern float asinf (float);
extern float atan2f (float, float);
extern float coshf (float);
extern float sinhf (float);
extern float expf (float);
extern float ldexpf (float, int);
extern float logf (float);
extern float log10f (float);
extern float powf (float, float);
extern float sqrtf (float);
extern float fmodf (float, float);




extern float exp2f (float);
extern float scalblnf (float, long int);
extern float tgammaf (float);
extern float nearbyintf (float);
extern long int lrintf (float);
extern long long int llrintf (float);
extern float roundf (float);
extern long int lroundf (float);
extern long long int llroundf (float);
extern float truncf (float);
extern float remquof (float, float, int *);
extern float fdimf (float, float);
extern float fmaxf (float, float);
extern float fminf (float, float);
extern float fmaf (float, float, float);

extern float infinityf (void);
extern float nanf (const char *);
extern float copysignf (float, float);
extern float logbf (float);
extern int ilogbf (float);

extern float asinhf (float);
extern float cbrtf (float);
extern float nextafterf (float, float);
extern float rintf (float);
extern float scalbnf (float, int);
extern float log1pf (float);
extern float expm1f (float);


extern float acoshf (float);
extern float atanhf (float);
extern float remainderf (float, float);
extern float gammaf (float);
extern float lgammaf (float);
extern float erff (float);
extern float erfcf (float);
extern float log2f (float);
extern float hypotf (float, float);
# 422 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 3
extern long double atanl (long double);
extern long double cosl (long double);
extern long double sinl (long double);
extern long double tanl (long double);
extern long double tanhl (long double);
extern long double frexpl (long double, int *);
extern long double modfl (long double, long double *);
extern long double ceill (long double);
extern long double fabsl (long double);
extern long double floorl (long double);
extern long double log1pl (long double);
extern long double expm1l (long double);




extern long double acosl (long double);
extern long double asinl (long double);
extern long double atan2l (long double, long double);
extern long double coshl (long double);
extern long double sinhl (long double);
extern long double expl (long double);
extern long double ldexpl (long double, int);
extern long double logl (long double);
extern long double log10l (long double);
extern long double powl (long double, long double);
extern long double sqrtl (long double);
extern long double fmodl (long double, long double);
extern long double hypotl (long double, long double);


extern long double copysignl (long double, long double);
extern long double nanl (const char *);
extern int ilogbl (long double);
extern long double asinhl (long double);
extern long double cbrtl (long double);
extern long double nextafterl (long double, long double);
extern float nexttowardf (float, long double);
extern double nexttoward (double, long double);
extern long double nexttowardl (long double, long double);
extern long double logbl (long double);
extern long double log2l (long double);
extern long double rintl (long double);
extern long double scalbnl (long double, int);
extern long double exp2l (long double);
extern long double scalblnl (long double, long);
extern long double tgammal (long double);
extern long double nearbyintl (long double);
extern long int lrintl (long double);
extern long long int llrintl (long double);
extern long double roundl (long double);
extern long lroundl (long double);
extern long long int llroundl (long double);
extern long double truncl (long double);
extern long double remquol (long double, long double, int *);
extern long double fdiml (long double, long double);
extern long double fmaxl (long double, long double);
extern long double fminl (long double, long double);
extern long double fmal (long double, long double, long double);

extern long double acoshl (long double);
extern long double atanhl (long double);
extern long double remainderl (long double, long double);
extern long double lgammal (long double);
extern long double erfl (long double);
extern long double erfcl (long double);
# 503 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 3
extern double drem (double, double);
extern float dremf (float, float);



extern double gamma_r (double, int *);
extern double lgamma_r (double, int *);
extern float gammaf_r (float, int *);
extern float lgammaf_r (float, int *);



extern double y0 (double);
extern double y1 (double);
extern double yn (int, double);
extern double j0 (double);
extern double j1 (double);
extern double jn (int, double);



extern float y0f (float);
extern float y1f (float);
extern float ynf (int, float);
extern float j0f (float);
extern float j1f (float);
extern float jnf (int, float);
# 564 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\math.h" 3
#define signgam (*__signgam())
extern int *__signgam (void);


#define __signgam_r(ptr) _REENT_SIGNGAM(ptr)







struct __exception



{
  int type;
  char *name;
  double arg1;
  double arg2;
  double retval;
  int err;
};


extern int matherr (struct __exception *e);






#define DOMAIN 1
#define SING 2
#define OVERFLOW 3
#define UNDERFLOW 4
#define TLOSS 5
#define PLOSS 6







#define MAXFLOAT 3.40282347e+38F

#define M_E 2.7182818284590452354
#define M_LOG2E 1.4426950408889634074
#define M_LOG10E 0.43429448190325182765
#define M_LN2 _M_LN2
#define M_LN10 2.30258509299404568402
#define M_PI 3.14159265358979323846
#define M_PI_2 1.57079632679489661923
#define M_PI_4 0.78539816339744830962
#define M_1_PI 0.31830988618379067154
#define M_2_PI 0.63661977236758134308
#define M_2_SQRTPI 1.12837916709551257390
#define M_SQRT2 1.41421356237309504880
#define M_SQRT1_2 0.70710678118654752440





#define M_TWOPI (M_PI * 2.0)
#define M_3PI_4 2.3561944901923448370E0
#define M_SQRTPI 1.77245385090551602792981
#define M_LN2LO 1.9082149292705877000E-10
#define M_LN2HI 6.9314718036912381649E-1
#define M_SQRT3 1.73205080756887719000
#define M_IVLN10 0.43429448190325182765
#define M_LOG2_E _M_LN2
#define M_INVLN2 1.4426950408889633870E0



enum __fdlibm_version
{
  __fdlibm_ieee = -1,
  __fdlibm_svid,
  __fdlibm_xopen,
  __fdlibm_posix
};

#define _LIB_VERSION_TYPE enum __fdlibm_version
#define _LIB_VERSION __fdlib_version

extern enum __fdlibm_version __fdlib_version;

#define _IEEE_ __fdlibm_ieee
#define _SVID_ __fdlibm_svid
#define _XOPEN_ __fdlibm_xopen
#define _POSIX_ __fdlibm_posix



}
# 46 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\cmath" 2 3
#undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS


#define _GLIBCXX_CMATH 1


#undef abs
#undef div
#undef acos
#undef asin
#undef atan
#undef atan2
#undef ceil
#undef cos
#undef cosh
#undef exp
#undef fabs
#undef floor
#undef fmod
#undef frexp
#undef ldexp
#undef log
#undef log10
#undef modf
#undef pow
#undef sin
#undef sinh
#undef sqrt
#undef tan
#undef tanh

extern "C++"
{
namespace std __attribute__ ((__visibility__ ("default")))
{



  inline double
  abs(double __x)
  { return __builtin_fabs(__x); }



  inline float
  abs(float __x)
  { return __builtin_fabsf(__x); }

  inline long double
  abs(long double __x)
  { return __builtin_fabsl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    abs(_Tp __x)
    { return __builtin_fabs(__x); }

  using ::acos;


  inline float
  acos(float __x)
  { return __builtin_acosf(__x); }

  inline long double
  acos(long double __x)
  { return __builtin_acosl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    acos(_Tp __x)
    { return __builtin_acos(__x); }

  using ::asin;


  inline float
  asin(float __x)
  { return __builtin_asinf(__x); }

  inline long double
  asin(long double __x)
  { return __builtin_asinl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    asin(_Tp __x)
    { return __builtin_asin(__x); }

  using ::atan;


  inline float
  atan(float __x)
  { return __builtin_atanf(__x); }

  inline long double
  atan(long double __x)
  { return __builtin_atanl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    atan(_Tp __x)
    { return __builtin_atan(__x); }

  using ::atan2;


  inline float
  atan2(float __y, float __x)
  { return __builtin_atan2f(__y, __x); }

  inline long double
  atan2(long double __y, long double __x)
  { return __builtin_atan2l(__y, __x); }


  template<typename _Tp, typename _Up>
    inline
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    atan2(_Tp __y, _Up __x)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return atan2(__type(__y), __type(__x));
    }

  using ::ceil;


  inline float
  ceil(float __x)
  { return __builtin_ceilf(__x); }

  inline long double
  ceil(long double __x)
  { return __builtin_ceill(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    ceil(_Tp __x)
    { return __builtin_ceil(__x); }

  using ::cos;


  inline float
  cos(float __x)
  { return __builtin_cosf(__x); }

  inline long double
  cos(long double __x)
  { return __builtin_cosl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    cos(_Tp __x)
    { return __builtin_cos(__x); }

  using ::cosh;


  inline float
  cosh(float __x)
  { return __builtin_coshf(__x); }

  inline long double
  cosh(long double __x)
  { return __builtin_coshl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    cosh(_Tp __x)
    { return __builtin_cosh(__x); }

  using ::exp;


  inline float
  exp(float __x)
  { return __builtin_expf(__x); }

  inline long double
  exp(long double __x)
  { return __builtin_expl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    exp(_Tp __x)
    { return __builtin_exp(__x); }

  using ::fabs;


  inline float
  fabs(float __x)
  { return __builtin_fabsf(__x); }

  inline long double
  fabs(long double __x)
  { return __builtin_fabsl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    fabs(_Tp __x)
    { return __builtin_fabs(__x); }

  using ::floor;


  inline float
  floor(float __x)
  { return __builtin_floorf(__x); }

  inline long double
  floor(long double __x)
  { return __builtin_floorl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    floor(_Tp __x)
    { return __builtin_floor(__x); }

  using ::fmod;


  inline float
  fmod(float __x, float __y)
  { return __builtin_fmodf(__x, __y); }

  inline long double
  fmod(long double __x, long double __y)
  { return __builtin_fmodl(__x, __y); }


  template<typename _Tp, typename _Up>
    inline
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    fmod(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return fmod(__type(__x), __type(__y));
    }

  using ::frexp;


  inline float
  frexp(float __x, int* __exp)
  { return __builtin_frexpf(__x, __exp); }

  inline long double
  frexp(long double __x, int* __exp)
  { return __builtin_frexpl(__x, __exp); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    frexp(_Tp __x, int* __exp)
    { return __builtin_frexp(__x, __exp); }

  using ::ldexp;


  inline float
  ldexp(float __x, int __exp)
  { return __builtin_ldexpf(__x, __exp); }

  inline long double
  ldexp(long double __x, int __exp)
  { return __builtin_ldexpl(__x, __exp); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    ldexp(_Tp __x, int __exp)
    { return __builtin_ldexp(__x, __exp); }

  using ::log;


  inline float
  log(float __x)
  { return __builtin_logf(__x); }

  inline long double
  log(long double __x)
  { return __builtin_logl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    log(_Tp __x)
    { return __builtin_log(__x); }

  using ::log10;


  inline float
  log10(float __x)
  { return __builtin_log10f(__x); }

  inline long double
  log10(long double __x)
  { return __builtin_log10l(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    log10(_Tp __x)
    { return __builtin_log10(__x); }

  using ::modf;


  inline float
  modf(float __x, float* __iptr)
  { return __builtin_modff(__x, __iptr); }

  inline long double
  modf(long double __x, long double* __iptr)
  { return __builtin_modfl(__x, __iptr); }


  using ::pow;


  inline float
  pow(float __x, float __y)
  { return __builtin_powf(__x, __y); }

  inline long double
  pow(long double __x, long double __y)
  { return __builtin_powl(__x, __y); }




  inline double
  pow(double __x, int __i)
  { return __builtin_powi(__x, __i); }

  inline float
  pow(float __x, int __n)
  { return __builtin_powif(__x, __n); }

  inline long double
  pow(long double __x, int __n)
  { return __builtin_powil(__x, __n); }



  template<typename _Tp, typename _Up>
    inline
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    pow(_Tp __x, _Up __y)
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return pow(__type(__x), __type(__y));
    }

  using ::sin;


  inline float
  sin(float __x)
  { return __builtin_sinf(__x); }

  inline long double
  sin(long double __x)
  { return __builtin_sinl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    sin(_Tp __x)
    { return __builtin_sin(__x); }

  using ::sinh;


  inline float
  sinh(float __x)
  { return __builtin_sinhf(__x); }

  inline long double
  sinh(long double __x)
  { return __builtin_sinhl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    sinh(_Tp __x)
    { return __builtin_sinh(__x); }

  using ::sqrt;


  inline float
  sqrt(float __x)
  { return __builtin_sqrtf(__x); }

  inline long double
  sqrt(long double __x)
  { return __builtin_sqrtl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    sqrt(_Tp __x)
    { return __builtin_sqrt(__x); }

  using ::tan;


  inline float
  tan(float __x)
  { return __builtin_tanf(__x); }

  inline long double
  tan(long double __x)
  { return __builtin_tanl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    tan(_Tp __x)
    { return __builtin_tan(__x); }

  using ::tanh;


  inline float
  tanh(float __x)
  { return __builtin_tanhf(__x); }

  inline long double
  tanh(long double __x)
  { return __builtin_tanhl(__x); }


  template<typename _Tp>
    inline
    typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
                                    double>::__type
    tanh(_Tp __x)
    { return __builtin_tanh(__x); }


}





#undef fpclassify
#undef isfinite
#undef isinf
#undef isnan
#undef isnormal
#undef signbit
#undef isgreater
#undef isgreaterequal
#undef isless
#undef islessequal
#undef islessgreater
#undef isunordered

namespace std __attribute__ ((__visibility__ ("default")))
{

# 869 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\cmath" 3
  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    fpclassify(_Tp __f)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_fpclassify(0, 1, 4,
      3, 2, __type(__f));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isfinite(_Tp __f)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isfinite(__type(__f));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isinf(_Tp __f)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isinf(__type(__f));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isnan(_Tp __f)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isnan(__type(__f));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isnormal(_Tp __f)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isnormal(__type(__f));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    signbit(_Tp __f)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_signbit(__type(__f));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isgreater(_Tp __f1, _Tp __f2)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isgreater(__type(__f1), __type(__f2));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isgreaterequal(_Tp __f1, _Tp __f2)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isgreaterequal(__type(__f1), __type(__f2));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isless(_Tp __f1, _Tp __f2)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isless(__type(__f1), __type(__f2));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    islessequal(_Tp __f1, _Tp __f2)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_islessequal(__type(__f1), __type(__f2));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    islessgreater(_Tp __f1, _Tp __f2)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_islessgreater(__type(__f1), __type(__f2));
    }

  template<typename _Tp>
    inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
        int>::__type
    isunordered(_Tp __f1, _Tp __f2)
    {
      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
      return __builtin_isunordered(__type(__f1), __type(__f2));
    }




}
# 1889 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\cmath" 3
}
# 37 "d:\\mihir\\semester 6\\cygnus\\tools\\toolchain\\gcc-arm\\arm-none-eabi\\include\\c++\\6.3.1\\math.h" 2 3

using std::abs;
using std::acos;
using std::asin;
using std::atan;
using std::atan2;
using std::cos;
using std::sin;
using std::tan;
using std::cosh;
using std::sinh;
using std::tanh;
using std::exp;
using std::frexp;
using std::ldexp;
using std::log;
using std::log10;
using std::modf;
using std::pow;
using std::sqrt;
using std::ceil;
using std::fabs;
using std::floor;
using std::fmod;


using std::fpclassify;
using std::isfinite;
using std::isinf;
using std::isnan;
using std::isnormal;
using std::signbit;
using std::isgreater;
using std::isgreaterequal;
using std::isless;
using std::islessequal;
using std::islessgreater;
using std::isunordered;
# 6 "src/main/PlutoPilot.cpp" 2
# 1 "./platform/User.h" 1





       







# 13 "./platform/User.h"
extern "C" {



typedef enum {

    RC_ROLL = 0,
    RC_PITCH,
    RC_YAW,
    RC_THROTTLE,
    RC_AUX1,
    RC_AUX2,
    RC_AUX3,
    RC_AUX4,
    RC_USER1,
    RC_USER2,
    RC_USER3

} rc_channel_e;

typedef enum {
    ANGLE,
    RATE,
    MAGHOLD,
    HEADFREE,
    ATLTITUDEHOLD,
    THROTTLE_MODE
}flight_mode_e;

typedef enum {

    BACK_FLIP

}flip_direction_e;




typedef enum {

    FS_ACCEL_GYRO_CALIBRATION = 0,
    FS_MAG_CALIBARATION,
    FS_LOW_BATTERY,
    FS_INFLIGHT_LOW_BATTERY,
    FS_CRASHED,
    FS_SIGNAL_LOSS,
    FS_NOT_OK_TO_ARM,
    FS_OK_TO_ARM,
    FS_ARMED

} flightstatus_e;



class RcData_P {
public:


    int16_t* get();
    int16_t get(rc_channel_e CHANNEL);


};


class RcCommand_P {
public:

    int16_t* get();
    int16_t get(rc_channel_e CHANNEL);
    void set(int16_t* rcValueArray);
    void set(rc_channel_e CHANNEL, int16_t rcValue);


};



class FlightMode_P {
public:

    bool check(flight_mode_e MODE);
    void set(flight_mode_e MODE);


};



class Command_P {
public:


    void takeOff(uint16_t height=150);
    void land(uint8_t landSpeed);
    void flip(flip_direction_e direction);
    bool arm();
    bool disArm();

};



class FlightStatus_P {
public:

    flightstatus_e get();
    bool check(flightstatus_e status);


};



class App_P {
public:

   int16_t getAppHeading(void);
   bool isArmSwitchOn(void);

};

void setheadFreeModeHeading(int16_t heading);

void setUserLoopFrequency(float frequency);


extern RcData_P RcData;
extern RcCommand_P RcCommand;
extern FlightMode_P FlightMode;
extern Command_P Command;
extern FlightStatus_P FlightStatus;
extern App_P App;



}
# 7 "src/main/PlutoPilot.cpp" 2
# 1 "./platform/Sensor.h" 1





       


# 1 "./platform/Comman.h" 1





       


extern "C" {


typedef enum {
    X = 0,
    Y,
    Z
} axis_e;


typedef enum {
    AG_ROLL = 0,
    AG_PITCH,
    AG_YAW,
} angle_e;




}
# 10 "./platform/Sensor.h" 2



extern "C" {



typedef enum {

    PRESSURE,
    TEMPERATURE

}baro_state_e;


class Accelerometer_P {
public:



    int16_t get(axis_e AXIS);
    int32_t getNetAcc(void);

};

class Gyroscope_P {
public:



    int16_t get(axis_e AXIS);

};

class Magnetometer_P {
public:



    int16_t get(axis_e AXIS);

};

class Barometer_P {
public:




    int32_t get(baro_state_e STATE);

};

extern Accelerometer_P Acceleration;
extern Gyroscope_P Gyroscope;
extern Magnetometer_P Magnetometer;
extern Barometer_P Barometer;


}
# 8 "src/main/PlutoPilot.cpp" 2
# 1 "./platform/Control.h" 1





       






extern "C" {



typedef struct {

  uint8_t p;
  uint8_t i;
  uint8_t d;

} PID;



typedef enum{

    PID_ROLL,
    PID_PITCH,
    PID_YAW,
    PID_ALT,
    PID_USER

}pid_profile_e;


typedef enum {

    LOW_BATTERY,
    INFLIGHT_LOW_BATTERY,
    CRASH,
    ALL

} failsafe_e;


class DesiredAngle_P {
public:




    int32_t get(angle_e ANGLE);

    void set(angle_e ANGLE, int32_t angle);


};


class DesiredRate_P {
public:



    int32_t get(angle_e ANGLE);

    void set(angle_e ANGLE, int32_t rate);


};


class DesiredPosition_P {
public:




    int32_t get(axis_e AXIS);

    void set(axis_e AXIS, int32_t position);

    void setRelative(axis_e AXIS, int32_t position);


};


class DesiredVelocity_P {
public:



    int32_t get(axis_e AXIS);

    void set(axis_e AXIS, int32_t velocity);


};





class PIDProfile_P {
public:

    void get(pid_profile_e PROFILE,PID* pid);

    void set(pid_profile_e PROFILE, PID* pid);

    void setDefault();


};




class Failsafe_P {
public:

    void enable(failsafe_e FAILSAFE);

    void disable(failsafe_e FAILSAFE);


};


extern DesiredAngle_P DesiredAngle;
extern DesiredRate_P DesiredRate;
extern DesiredPosition_P DesiredPosition;
extern DesiredVelocity_P DesiredVelocity;
extern PIDProfile_P PIDProfile;
extern Failsafe_P Failsafe;





}
# 9 "src/main/PlutoPilot.cpp" 2
# 1 "./platform/Estimate.h" 1





       






extern "C" {





class Angle_P {
public:





    int16_t get(angle_e ANGLE);


};


class Rate_P {
public:



    int16_t get(axis_e AXIS);


};



class Position_P {
public:



    int16_t get(axis_e AXIS);


};



class Velocity_P {
public:



    int16_t get(axis_e AXIS);


};



extern Angle_P Angle;
extern Rate_P Rate;
extern Position_P Position;
extern Velocity_P Velocity;



}
# 10 "src/main/PlutoPilot.cpp" 2


void plutoInit()
{

 Monitor.println("plutoInit ");
 setUserLoopFrequency(50);
}





void onLoopStart()
{

 GPIO.init(Pin8, INPUT);
 LED.flightStatus(DEACTIVATE);
 Monitor.println("onLoopStart ");
}




void plutoLoop()
{
 Monitor.println(" ",GPIO.read(Pin8));


 if(GPIO.read(Pin8) == 1){


  LED.set(RED, OFF);
  LED.set(GREEN, ON);

 }
 else{



  LED.set(RED, ON);
  LED.set(GREEN, OFF);

 }

}




void onLoopFinish()
{



}
